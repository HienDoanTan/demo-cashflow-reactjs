{"version":3,"sources":["images/icons/income.jpg","images/icons/expense.png","images/icons/saving.png","constants/alert.constants.js","constants/incomes.constants.js","constants/user.constants.js","constants/expense.constants.js","constants/expense_history.constants.js","constants/income_history.constants.js","constants/saving.constants.js","constants/saving_history.constants.js","reducers/authentication.reducer.js","reducers/index.js","reducers/alert.reducer.js","reducers/users.reducer.js","helpers/store.js","helpers/history.js","helpers/auth-header.js","services/income.services.js","services/user.services.js","services/expense.services.js","services/expense_history.services.js","services/income_history.services.js","services/saving.services.js","services/saving_history.services.js","actions/incomes.actions.js","actions/alert.actions.js","actions/user.actions.js","services/data.services.js","constants/data.contants.js","actions/data.actions.js","actions/expense.actions.js","actions/expense_history.actions.js","actions/income_history.actions.js","actions/saving.actions.js","actions/saving_history.actions.js","components/home/footer.js","components/login/login.js","components/PrivateRoute.js","helpers/helpers.js","components/multiple/multiple.js","components/incomes/incomes.js","components/incomes/income_history.js","components/saving/saving.js","components/saving/saving_history.js","components/expense/expense.js","components/expense/expense_history.js","components/incomes/index.js","themes/highcharts/darkgreen.js","themes/highcharts/gridlight.js","components/chart/default/default_chart.js","themes/highcharts/darkgreen_year_chart.js","themes/highcharts/gridlight_year_chart.js","components/chart/default/years_chart.js","themes/highcharts/dark_theme_column_chart.js","themes/highcharts/light_theme_column_chart.js","components/chart/default/pie_chart.js","components/chart/index.js","helpers/calculateSum.js","components/count_totals/count_totals.js","components/home/home.js","components/layout/layout.js","components/register/register.js","components/reCAPTCHA/reCAPTCHA.js","App.js","index.js"],"names":["alertConstants","SUCCESS","ERROR","CLEAR","incomeConstants","INCOME_INSERT_SUCCESS","INCOME_INSERT_FAIL","INCOME_INSERT_ERROR","INCOME_INSERT_REQUEST","userConstants","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","DELETE_AVATAR_REQUEST","DELETE_AVATAR_SUCCESS","DELETE_AVATAR_FAILURE","expenseConstants","EXPENSE_INSERT_SUCCESS","EXPENSE_INSERT_FAIL","EXPENSE_INSERT_ERROR","EXPENSE_INSERT_REQUEST","expense_history_constants","EXPENSE_HISTORY_GET_SUCCESS","EXPENSE_HISTORY_GET_FAIL","EXPENSE_HISTORY_GET_ERROR","EXPENSE_HISTORY_GET_REQUEST","EXPENSE_HISTORY_REMOVE_SUCCESS","EXPENSE_HISTORY_REMOVE_FAIL","EXPENSE_HISTORY_REMOVE_ERROR","EXPENSE_HISTORY_REMOVE_REQUEST","income_history_constants","INCOME_HISTORY_GET_SUCCESS","INCOME_HISTORY_GET_FAIL","INCOME_HISTORY_GET_REQUEST","INCOME_HISTORY_DELETE_SUCCESS","INCOME_HISTORY_DELETE_FAIL","INCOME_HISTORY_DELETE_REQUEST","saving_constants","SAVING_INSERT_SUCCESS","SAVING_INSERT_FAIL","SAVING_INSERT_ERROR","SAVING_INSERT_REQUEST","saving_history_constants","SAVING_HISTORY_GET_SUCCESS","SAVING_HISTORY_FAIL","SAVING_HISTORY_REQUEST","SAVING_HISTORY_DELETE_SUCCESS","SAVING_HISTORY_DELETE_FAIL","SAVING_HISTORY_DELETE_REQUEST","user","JSON","parse","localStorage","getItem","initialState","loggedIn","rootReducer","combineReducers","authentication","state","arguments","length","undefined","action","type","loggingIn","alert","message","users","loading","items","error","_objectSpread","map","id","deleting","filter","userCopy","_objectWithoutProperties","_excluded","deleteError","store","createLogger","createStore","applyMiddleware","thunkMiddleware","history","createBrowserHistory","authHeader","accessToken","income","require","incomeService","insertIncome","dataIncome","requestOptions","method","headers","body","stringify","fetch","concat","config","local","host","insert","then","handleResponse","response","text","data","ok","status","statusText","Promise","reject","userService","login","username","password","value","setItem","register","logout","window","location","reload","removeItem","expense","expense_service","expense_insert","expense_history_service","expense_get_history","fromday","today","search_string","queryString","fn_expense_remove_history","delete","href","income_history_services","income_history_get","income_history_delete","saving","saving_services","saving_insert","dataSaving","saving_history_service","saving_history_get","saving_history_delete","incomeActions","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","wrap","_context","prev","next","success","failure","toString","alertActions","abrupt","sent","stop","_x","apply","clear","userActions","_ref2","_callee2","_context2","push","_x2","dataService","getYearNumber","get_year","fn_get_data_by_year","year","get_data_by_year","fn_get_data_all_year","get_data_all_year","dataConstants","DATA_YEAR_REQUEST","DATA_YEAR_SUCCESS","DATA_YEAR_FAIL","DATA_BY_YEAR_REQUEST","DATA_BY_YEAR_SUCCESS","DATA_BY_YEAR_FAIL","DATA_ALL_YEAR_REQUEST","DATA_ALL_YEAR_SUCCESS","DATA_ALL_YEAR_FAIL","dataActions","_ref3","_callee3","_context3","_x3","expense_actions","expense_history_actions","income_history_actions","saving_actions","saving_history_actions","Footer","Layout","Header","Content","FooterComponent","_jsxs","style","textAlign","children","_jsx","target","Sider","connect","forwardRef","translate","props","t","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","valueLanguage","setValueLanguage","_useState5","_useState6","theme","_useState7","_useState8","classNameHot","useEffect","setDefaultLanguage","Date","getHours","document","classList","remove","add","className","transition","lineHeight","color","backgroundColor","backgroundImage","paddingTop","Avatar","size","src","alt","padding","marginTop","Row","align","minHeight","Col","span","offset","Form","name","initialValues","remember","onFinish","setTimeout","Item","rules","required","Input","prefix","UserOutlined","placeholder","autoComplete","LockOutlined","valuePropName","noStyle","Checkbox","Button","shape","htmlType","Switch","onChange","key","lang","setLanguage","checkedChildren","unCheckedChildren","PrivateRoute","Component","component","rest","Route","render","Redirect","to","pathname","from","groupBy","_groupBy","xs","f","reduce","r","v","i","a","k","remove_duplicates_es6","arr","seen","ret_arr","dataObject","set_dataObject","isLoading","defaultPageSize","set_defaultPageSize","sharedOnCell","_","index","colSpan","renderContent","row","colorMoney","money","replace","parseInt","Tag","columns","title","dataIndex","responsive","width","fixed","sorter","b","indexValue","obj","height","onCell","isAfter","rowSpan","val","Space","direction","background","data_all_year","dataExpense","listYear","myArr","data_value","arrayIncome","total","arrayExpense","arraySaving","arrayCountMoney","_loop","countMoney","period","totalMoney","colorOptions","pushtu","month_1","month_2","month_3","month_4","month_5","month_6","month_7","month_8","month_9","month_10","month_11","month_12","ii","array","numIndex","car","Object","keys","col","rowspan","colspan","finally","xObject","sort","fn_render_data_multi","incomeDto","expenseDto","savingDto","label","toLowerCase","Dropdown","menu","onClick","e","num_rows","preventDefault","DownOutlined","Table","dataSource","pagination","pageSize","scroll","x","bordered","Title","Typography","day","actions","notes","dataHandsome","setDataHandsome","ref_income","useRef","count_total","set_count_total","hotSetting","ref","rowHeaders","rowHeights","minRows","minSpareRows","stretchH","manualRowResize","manualColumnResize","licenseKey","contextMenu","fixedRowsBottom","column","cells","prop","cellProperties","renderer","instance","td","dateFormat","readOnly","Handsontable","renderers","DateRenderer","this","TextRenderer","fontWeight","numericFormat","pattern","NumericRenderer","beforeChange","source","changes","newValues","Number","current","hotInstance","getDataAtRowProp","afterChange","forEach","change","toDay","Moment","format","newVal","days","setDataAtRowProp","isValid","object_income","getSourceData","total_money","fnAfterChange","afterInit","afterSelectionEnd","c","r2","c2","isMobile","getActiveEditor","enableFullEditMode","beginEditing","fnSaveIncomes","_fnSaveIncomes","DataObject","_functionPassed","_fnc","prepare_callback","activeKey","Spin","tip","spinning","delay","HotTable","colHeaders","zIndex","settings","Badge","Ribbon","Card","headStyle","level","border","icon","SaveFilled","functionPassed","RangePicker","DatePicker","antIcon","LoadingOutlined","fontSize","spin","data_income_history","set_data_income_history","is_loading","isChecked","set_isChecked","is_has_data","set_is_has_data","_useState9","_useState10","list_checked_id","set_list_checked_id","_useState11","_useState12","_useState13","moment","startOf","_useState14","firstDay","set_firstDay","_useState15","endOf","_useState16","lastDay","set_lastDay","_useState17","_useState18","data_merge_Cells","set_data_merge_Cells","ref_income_history","_useState19","_useState20","input_text","set_input_text","hotSetting_income_history","maxCols","mergeCells","comments","correctFormat","checkedTemplate","uncheckedTemplate","comment","CheckboxRenderer","_toConsumableArray","array_value","item","afterOnCellMouseDown","event","coords","TD","isCheck","getDataAtCell","afterSelection","row2","column2","preventScrolling","selectionLayerLevel","_confirm","fn_search_income_history","_fn_search_income_history","firstDay_","lastDay_","_isValid","dataCallback","available","countTotals","n","warning","indicator","justify","defaultValue","dates","dateStrings","fromDays","toDays","onCalendarChange","dateRender","date","checked","array_id","arrValue","Popconfirm","onConfirm","onCancel","okText","cancelText","danger","allowClear","SearchOutlined","getPlugin","downloadFile","bom","columnDelimiter","columnHeaders","exportHiddenColumns","exportHiddenRows","fileExtension","filename","mimeType","rowDelimiter","disabled","DownloadOutlined","gutter","ref_saving","object_saving","fn_save_saving","_fn_save_saving","data_saving_history","set_data_saving_history","ref_saving_history","hotSetting_saving_history","countRows","fn_search_saving_history","_fn_search_saving_history","ref_expense","object_expense","beforeKeyDown","fn_save_expense","_fn_save_expense","data_expense_history","set_data_expense_history","ref_expense_history","hotSetting_expense_history","fn_search_expense_history","catch","console","log","_fn_search_expense_history","Tabs","TabPane","set_activeKey","StickyContainer","animated","defaultActiveKey","renderTabBar","DefaultTabBar","Sticky","bottomOffset","marginRight","borderRadius","default","IncomeComponent","IncomeHistoryComponent","ExpenseComponent","ExpenseHistoryComponent","SavingComponent","SavingHistoryComponent","Highcharts","chart","plotOptions","depth","stacking","xAxis","labels","skew3d","gridLineColor","yAxis","credits","enabled","colorAxis","legend","itemStyle","highcharts3d","type_chart","id_name","chartRef","React","createRef","stack","series","borderColor","options3d","alpha","beta","viewDistance","fontFamily","pointPadding","borderWidth","borderRadiusTopLeft","borderRadiusTopRight","colors","gridLineWidth","categories","formatter","num","toFixed","tooltip","y","point","stackTotal","toLocaleString","chartOptions","setChartOptions","update","setCategories","gridlight","darkgreen","_props$data","data_income","data_expense","data_saving","array_income","array_expense","array_saving","renderTo","setData","destroy","fn_update_chart_data","HighchartsReact","highcharts","options","containerProps","chartYearRef","list_year","data_year","subtitle","accessibility","font","connectorAllowed","condition","maxWidth","layout","verticalAlign","array_expenseDto","array_year","count","chartColumnRef","array_data","this_year","month","this_month","object_data","temp_month","light_theme","dark_theme","ChartComponent","defaultChart","set_defaultChart","setIsLoading","array_data_year_chart","set_array_data_year_chart","default_segmented_options","set_default_segmented_options","bigarray","arrayOfArrays","slice","split_long_array_with_size","BarChartOutlined","LineChartOutlined","lg","md","Segmented","Empty","List","itemLayout","page","defaultCurrent","renderItem","DefaultChart","YearsChart","calculateSum","property","accumulator","object","Meta","txt_income","set_txt_income","txt_expense","set_txt_expense","txt_saving","set_txt_saving","txt_remain","set_txt_remain","total_incomes","total_expense","total_saving","display","sm","avatar","margin","description","flatColors","EMERALD","ALIZARIN","ClockCircleOutlined","remaining","setTranslations","vi","en","setLanguageCookie","set_array_data","set_data_all_year","_fn_load_all_year","_fn_get_data_by_year","fn_load_all_year","objectX","promises","data_return","all","_fn_get_data_all_year","_callee4","_context4","Breadcrumb","PieChartComponent","IncomePage","CountTotals","NestedTable","setCurrent","open","setOpen","setTheme","setClassNameHot","now","defaultChecked","itemsMenuHeader","AppstoreFilled","hasSider","position","top","alignItems","Menu","selectedKeys","mode","overlayStyle","onOpenChange","flag","overflow","HomeComponent","registering","labelCol","wrapperCol","values","onFinishFailed","errorInfo","Password","App","Router","SwitchDOM","path","LoginComponent","RegisterComponent","exact","LayoutComponent","ReactDOM","Provider","BrowserRouter","getElementById"],"mappings":"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","file":"static/js/main.58486f61.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/income.bca6236d.jpg\";","export default __webpack_public_path__ + \"static/media/expense.3435f26b.png\";","export default __webpack_public_path__ + \"static/media/saving.edb4f014.png\";","export const alertConstants = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    CLEAR: 'ALERT_CLEAR'\r\n};\r\n","export const incomeConstants = {\r\n    INCOME_INSERT_SUCCESS: 'INCOME_INSERT_SUCCESS',\r\n    INCOME_INSERT_FAIL: 'INCOME_INSERT_FAIL',\r\n    INCOME_INSERT_ERROR: 'INCOME_INSERT_ERROR',\r\n    INCOME_INSERT_REQUEST: 'INCOME_INSERT_REQUEST'\r\n}\r\n","export const userConstants = {\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n\r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\r\n\r\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE',\r\n\r\n    DELETE_AVATAR_REQUEST: 'USERS_DELETE_AVATAR_REQUEST',\r\n    DELETE_AVATAR_SUCCESS: 'USERS_DELETE_AVATAR_SUCCESS',\r\n    DELETE_AVATAR_FAILURE: 'USERS_DELETE_AVATAR_FAILURE',\r\n};\r\n","export const expenseConstants = {\r\n    EXPENSE_INSERT_SUCCESS: 'EXPENSE_INSERT_SUCCESS',\r\n    EXPENSE_INSERT_FAIL: 'EXPENSE_INSERT_FAIL',\r\n    EXPENSE_INSERT_ERROR: 'EXPENSE_INSERT_ERROR',\r\n    EXPENSE_INSERT_REQUEST: 'EXPENSE_INSERT_REQUEST'\r\n}\r\n","export const expense_history_constants = {\r\n    EXPENSE_HISTORY_GET_SUCCESS: 'EXPENSE_HISTORY_GET_SUCCESS',\r\n    EXPENSE_HISTORY_GET_FAIL: 'EXPENSE_HISTORY_GET_FAIL',\r\n    EXPENSE_HISTORY_GET_ERROR: 'EXPENSE_HISTORY_GET_ERROR',\r\n    EXPENSE_HISTORY_GET_REQUEST: 'EXPENSE_HISTORY_GET_REQUEST',\r\n\r\n    EXPENSE_HISTORY_REMOVE_SUCCESS: 'EXPENSE_HISTORY_REMOVE_SUCCESS',\r\n    EXPENSE_HISTORY_REMOVE_FAIL: 'EXPENSE_HISTORY_REMOVE_FAIL',\r\n    EXPENSE_HISTORY_REMOVE_ERROR: 'EXPENSE_HISTORY_REMOVE_ERROR',\r\n    EXPENSE_HISTORY_REMOVE_REQUEST: 'EXPENSE_HISTORY_REMOVE_REQUEST',\r\n\r\n}\r\n","export const income_history_constants = {\r\n    INCOME_HISTORY_GET_SUCCESS: 'INCOME_HISTORY_GET_SUCCESS',\r\n    INCOME_HISTORY_GET_FAIL: 'INCOME_HISTORY_GET_FAIL',\r\n    INCOME_HISTORY_GET_REQUEST: 'INCOME_HISTORY_GET_REQUEST',\r\n\r\n    INCOME_HISTORY_DELETE_SUCCESS: 'INCOME_HISTORY_DELETE_SUCCESS',\r\n    INCOME_HISTORY_DELETE_FAIL: 'INCOME_HISTORY_DELETE_FAIL',\r\n    INCOME_HISTORY_DELETE_REQUEST: 'INCOME_HISTORY_DELETE_REQUEST'\r\n}\r\n","export const saving_constants = {\r\n    SAVING_INSERT_SUCCESS: 'SAVING_INSERT_SUCCESS',\r\n    SAVING_INSERT_FAIL: 'SAVING_INSERT_FAIL',\r\n    SAVING_INSERT_ERROR: 'SAVING_INSERT_ERROR',\r\n    SAVING_INSERT_REQUEST: 'SAVING_INSERT_REQUEST'\r\n}\r\n","export const saving_history_constants = {\r\n    SAVING_HISTORY_GET_SUCCESS: 'SAVING_HISTORY_GET_SUCCESS',\r\n    SAVING_HISTORY_FAIL: 'SAVING_HISTORY_FAIL',\r\n    SAVING_HISTORY_REQUEST: 'SAVING_HISTORY_REQUEST',\r\n\r\n    SAVING_HISTORY_DELETE_SUCCESS: 'SAVING_HISTORY_DELETE_SUCCESS',\r\n    SAVING_HISTORY_DELETE_FAIL: 'SAVING_HISTORY_DELETE_FAIL',\r\n    SAVING_HISTORY_DELETE_REQUEST: 'SAVING_HISTORY_DELETE_REQUEST',\r\n\r\n}\r\n","import {userConstants} from '../constants';\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? {loggedIn: true, user} : {};\r\nexport function authentication(state = initialState, action) {\r\n    switch (action.type) {\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {\r\n                loggingIn: true,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {};\r\n        case userConstants.LOGOUT:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { authentication } from './authentication.reducer';\r\nimport { alert } from './alert.reducer';\r\nimport { users } from './users.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    alert,\r\n    users\r\n});\r\n\r\nexport default rootReducer;\r\n","import {alertConstants} from '../constants';\r\nexport function alert(state = {}, action) {\r\n    switch (action.type) {\r\n        case alertConstants.SUCCESS:\r\n            return {\r\n                type: 'alert-success',\r\n                message: action.message\r\n            };\r\n        case alertConstants.ERROR:\r\n            return {\r\n                type: 'alert-danger',\r\n                message: action.message\r\n            };\r\n        case alertConstants.CLEAR:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { userConstants } from '../constants';\r\n\r\nexport function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.GETALL_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case userConstants.GETALL_SUCCESS:\r\n            return {\r\n                items: action.users\r\n            };\r\n        case userConstants.GETALL_FAILURE:\r\n            return {\r\n                error: action.error\r\n            };\r\n        case userConstants.DELETE_REQUEST:\r\n            // add 'deleting:true' property to user being deleted\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user =>\r\n                    user.id === action.id\r\n                        ? { ...user, deleting: true }\r\n                        : user\r\n                )\r\n            };\r\n        case userConstants.DELETE_SUCCESS:\r\n            // remove deleted user from state\r\n            return {\r\n                items: state.items.filter(user => user.id !== action.id)\r\n            };\r\n        case userConstants.DELETE_FAILURE:\r\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user => {\r\n                    if (user.id === action.id) {\r\n                        // make copy of user without 'deleting:true' property\r\n                        const { deleting, ...userCopy } = user;\r\n                        // return copy of user with 'deleteError:[error]' property\r\n                        return { ...userCopy, deleteError: action.error };\r\n                    }\r\n\r\n                    return user;\r\n                })\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {createLogger} from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\nconst loggerMiddleware = createLogger();\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n       //loggerMiddleware\r\n    )\r\n);\r\n","import {createBrowserHistory} from 'history';\r\nexport const history = createBrowserHistory();\r\n","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.accessToken) {\r\n        return {\r\n            'X-Access-Token': user.accessToken,\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\r\n            \"Access-Control-Allow-Methods\": \"*\"\r\n        };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import config from './../config/config.json';\r\nimport {authHeader} from '../helpers';\r\n\r\nconst {income} = require('./../config/api_config.json');\r\n\r\nexport const incomeService = {\r\n    insertIncome\r\n};\r\n\r\nfunction insertIncome(dataIncome) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify(dataIncome),\r\n    };\r\n\r\n    return fetch(`${config.local.host}${income.insert}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n","import config from './../config/config.json';\r\nimport {authHeader} from '../helpers';\r\n\r\nexport const userService = {\r\n    login,\r\n    register,\r\n    logout,\r\n};\r\n\r\nfunction login(username, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({username, password})\r\n    };\r\n\r\n    return fetch(`${config.local.host}/api/auth/signin`, requestOptions)\r\n        .then(handleResponse => handleResponse.text().then(text => {\r\n            const data = text && JSON.parse(text);\r\n\r\n            if (!handleResponse.ok) {\r\n                if (handleResponse.status === 401) {\r\n\r\n                }\r\n\r\n                const error = (data && data.message) || (data && data.value) || handleResponse.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n            localStorage.setItem('user', JSON.stringify(data));\r\n            return data;\r\n        }));\r\n}\r\n\r\nfunction register(username, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({username, password})\r\n    }\r\n\r\n        return fetch(`${config.local.host}/api/auth/register`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                window.location.reload();\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\n\r\n","import config from './../config/config.json';\r\nimport {authHeader} from '../helpers';\r\n\r\nconst {expense} = require('./../config/api_config.json');\r\nexport const expense_service = {\r\n    expense_insert\r\n};\r\n\r\nfunction expense_insert(dataIncome) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify(dataIncome),\r\n    };\r\n\r\n    return fetch(`${config.local.host}${expense.insert}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n","import config from './../config/config.json';\r\nimport {authHeader} from '../helpers';\r\n\r\nconst {expense} = require('./../config/api_config.json');\r\n\r\nexport const expense_history_service = {\r\n    expense_get_history,\r\n    fn_expense_remove_history\r\n};\r\n\r\nfunction expense_get_history(fromday, today, search_string) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            fromday: fromday,\r\n            today: today,\r\n            queryString: search_string\r\n        })\r\n    };\r\n\r\n    return fetch(`${config.local.host}${expense.history}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction fn_expense_remove_history(value) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify(value)\r\n    };\r\n\r\n    return fetch(`${config.local.host}${expense.delete}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n\r\n                window.location.href = \"/login\";\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n","import config from './../config/config.json';\r\nimport {authHeader} from '../helpers';\r\n\r\nconst {income} = require('./../config/api_config.json');\r\n\r\nexport const income_history_services = {\r\n    income_history_get,\r\n    income_history_delete\r\n};\r\n\r\nfunction income_history_get(fromday, today, queryString) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            fromday: fromday,\r\n            today: today,\r\n            queryString: queryString\r\n        })\r\n    };\r\n\r\n    return fetch(`${config.local.host}${income.history}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction income_history_delete(value) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify(value)\r\n    };\r\n\r\n    return fetch(`${config.local.host}${income.delete}`, requestOptions).then(handleResponse);\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                window.location.href = \"/login\";\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n","import config from './../config/config.json';\r\nimport {authHeader} from '../helpers';\r\n\r\nconst {saving} = require('./../config/api_config.json');\r\n\r\nexport const saving_services = {\r\n    saving_insert: saving_insert\r\n};\r\n\r\nfunction saving_insert(dataSaving) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify(dataSaving),\r\n    };\r\n\r\n    return fetch(`${config.local.host}${saving.insert}`, requestOptions).then(handleResponse);\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                window.location.href = \"/login\";\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n","import config from './../config/config.json';\r\nimport {authHeader} from '../helpers';\r\nconst {saving} = require('./../config/api_config.json');\r\n\r\nexport const saving_history_service = {\r\n    saving_history_get: saving_history_get,\r\n    saving_history_delete: saving_history_delete\r\n};\r\n\r\nfunction saving_history_get(fromday, today, queryString) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            fromday: fromday,\r\n            today: today,\r\n            queryString: queryString\r\n        })\r\n    };\r\n\r\n    return fetch(`${config.local.host}${saving.history}`, requestOptions).then(handleResponse);\r\n}\r\n\r\n\r\nfunction saving_history_delete(value) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify(value)\r\n    };\r\n\r\n    return fetch(`${config.local.host}${saving.delete}`, requestOptions).then(handleResponse);\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                window.location.href = \"/login\";\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n","import {incomeService} from \"../services\";\r\nimport {incomeConstants} from \"../constants\";\r\nimport {alertActions} from \"./\";\r\n\r\nexport const incomeActions = {\r\n    insertIncome\r\n};\r\n\r\nfunction insertIncome(dataIncome) {\r\n    return async dispatch => {\r\n        dispatch(request({ dataIncome }));\r\n\r\n        return await incomeService.insertIncome(dataIncome).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                dispatch(alertActions.error(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request(data) {\r\n        return {type: incomeConstants.INCOME_INSERT_REQUEST, data};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: incomeConstants.INCOME_INSERT_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: incomeConstants.INCOME_INSERT_FAIL, error};\r\n    }\r\n}\r\n","import {alertConstants} from '../constants';\r\n\r\nexport const alertActions = {\r\n    success,\r\n    error,\r\n    clear\r\n};\r\n\r\nfunction success(message) {\r\n    return {type: alertConstants.SUCCESS, message};\r\n}\r\n\r\nfunction error(message) {\r\n    return {type: alertConstants.ERROR, message};\r\n}\r\n\r\nfunction clear() {\r\n    return {type: alertConstants.CLEAR};\r\n}\r\n","import {userConstants} from '../constants';\r\nimport {userService} from '../services';\r\nimport {alertActions} from './';\r\nimport {message} from \"antd\";\r\nimport {history} from '../helpers';\r\n\r\nexport const userActions = {\r\n    login,\r\n    register,\r\n    logout\r\n};\r\n\r\nfunction login(username, password) {\r\n    return async dispatch => {\r\n        dispatch(request({username}));\r\n\r\n        return await userService.login(username, password)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user));\r\n                    return success(user);\r\n                },\r\n                error => {\r\n                    message.error(error.toString());\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                    return failure(error);\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) {\r\n        return {type: userConstants.LOGIN_REQUEST, user}\r\n    }\r\n\r\n    function success(user) {\r\n        return {type: userConstants.LOGIN_SUCCESS, user}\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: userConstants.LOGIN_FAILURE, error}\r\n    }\r\n}\r\n\r\nfunction register(username, password) {\r\n    return async dispatch => {\r\n        dispatch(request(username));\r\n        return await userService.register(username, password)\r\n            .then(\r\n                user => {\r\n                    dispatch(success());\r\n                    history.push('/login');\r\n                    dispatch(alertActions.success('Registration successful'));\r\n                },\r\n                error => {\r\n                    message.error(error.toString());\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                    return failure(error);\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) {\r\n        return {type: userConstants.REGISTER_REQUEST, user}\r\n    }\r\n\r\n    function success(user) {\r\n        return {type: userConstants.REGISTER_SUCCESS, user}\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: userConstants.REGISTER_FAILURE, error}\r\n    }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return {type: userConstants.LOGOUT};\r\n}\r\n\r\n","import {authHeader} from \"../helpers\";\r\nimport config from './../config/config.json';\r\n\r\nconst {data} = require('./../config/api_config.json');\r\nexport const dataService = {\r\n    getYearNumber,\r\n    fn_get_data_by_year,\r\n    fn_get_data_all_year\r\n};\r\n\r\nfunction getYearNumber() {\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${config.local.host}${data.get_year}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction fn_get_data_by_year(year) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({year: year}),\r\n    };\r\n\r\n    return fetch(`${config.local.host}${data.get_data_by_year}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction fn_get_data_all_year() {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {...authHeader(), 'Content-Type': 'application/json'}\r\n    };\r\n\r\n    return fetch(`${config.local.host}${data.get_data_all_year}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                window.location.href = \"/login\";\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n","export const dataConstants ={\r\n    DATA_YEAR_REQUEST: 'DATA_YEAR_REQUEST',\r\n    DATA_YEAR_SUCCESS: 'DATA_YEAR_SUCCESS',\r\n    DATA_YEAR_FAIL: 'DATA_YEAR_FAIL',\r\n\r\n    DATA_BY_YEAR_REQUEST: 'DATA_BY_YEAR_REQUEST',\r\n    DATA_BY_YEAR_SUCCESS: 'DATA_BY_YEAR_SUCCESS',\r\n    DATA_BY_YEAR_FAIL: 'DATA_BY_YEAR_FAIL',\r\n\r\n    DATA_ALL_YEAR_REQUEST: 'DATA_ALL_YEAR_REQUEST',\r\n    DATA_ALL_YEAR_SUCCESS: 'DATA_ALL_YEAR_SUCCESS',\r\n    DATA_ALL_YEAR_FAIL: 'DATA_ALL_YEAR_FAIL'\r\n}\r\n","import {dataService} from \"../services/data.services\";\r\nimport {dataConstants} from \"../constants/data.contants\";\r\n\r\nexport const dataActions = {\r\n    getYearNumber,\r\n    fn_get_data_by_year,\r\n    fn_get_data_all_year\r\n}\r\nfunction getYearNumber() {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await dataService.getYearNumber().then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request() {\r\n        return {type: dataConstants.DATA_YEAR_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: dataConstants.DATA_YEAR_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: dataConstants.DATA_YEAR_FAIL, error};\r\n    }\r\n}\r\n\r\nfunction fn_get_data_by_year(year) {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await dataService.fn_get_data_by_year(year).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request() {\r\n        return {type: dataConstants.DATA_BY_YEAR_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: dataConstants.DATA_BY_YEAR_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: dataConstants.DATA_BY_YEAR_FAIL, error};\r\n    }\r\n}\r\n\r\nfunction fn_get_data_all_year() {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await dataService.fn_get_data_all_year().then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request() {\r\n        return {type: dataConstants.DATA_ALL_YEAR_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: dataConstants.DATA_ALL_YEAR_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: dataConstants.DATA_ALL_YEAR_FAIL, error};\r\n    }\r\n}\r\n","import {expense_service} from \"../services\";\r\nimport {expenseConstants} from \"../constants\";\r\nimport {alertActions} from \"./\";\r\n\r\nexport const expense_actions = {\r\n    expense_insert\r\n};\r\n\r\nfunction expense_insert(dataIncome) {\r\n    return async dispatch => {\r\n        dispatch(request({ dataIncome }));\r\n\r\n        return await expense_service.expense_insert(dataIncome).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                dispatch(alertActions.error(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request(data) {\r\n        return {type: expenseConstants.EXPENSE_INSERT_REQUEST, data};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: expenseConstants.EXPENSE_INSERT_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: expenseConstants.EXPENSE_INSERT_FAIL, error};\r\n    }\r\n}\r\n","import {expense_history_service} from \"../services\";\r\nimport {expense_history_constants} from \"../constants\";\r\n\r\nexport const expense_history_actions = {\r\n    expense_get_history,\r\n    fn_expense_remove_history\r\n};\r\n\r\nfunction expense_get_history(fromday, today, search_string) {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await expense_history_service.expense_get_history(fromday, today, search_string).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request() {\r\n        return {type: expense_history_constants.EXPENSE_HISTORY_GET_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: expense_history_constants.EXPENSE_HISTORY_GET_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: expense_history_constants.EXPENSE_HISTORY_GET_FAIL, error};\r\n    }\r\n}\r\n\r\nfunction fn_expense_remove_history(value) {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await expense_history_service.fn_expense_remove_history(value).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n    function request() {\r\n        return {type: expense_history_constants.EXPENSE_HISTORY_REMOVE_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: expense_history_constants.EXPENSE_HISTORY_REMOVE_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: expense_history_constants.EXPENSE_HISTORY_REMOVE_FAIL, error};\r\n    }\r\n}\r\n","import {income_history_services} from \"../services\";\r\nimport {income_history_constants} from \"../constants\";\r\n\r\nexport const income_history_actions = {\r\n    income_history_get,\r\n    income_history_delete\r\n};\r\n\r\nfunction income_history_get(fromday, today, queryString) {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await income_history_services.income_history_get(fromday, today, queryString).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request() {\r\n        return {type: income_history_constants.INCOME_HISTORY_GET_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: income_history_constants.INCOME_HISTORY_GET_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: income_history_constants.INCOME_HISTORY_GET_FAIL, error};\r\n    }\r\n}\r\n\r\nfunction income_history_delete(value) {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await income_history_services.income_history_delete(value).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n    function request() {\r\n        return {type: income_history_constants.INCOME_HISTORY_DELETE_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: income_history_constants.INCOME_HISTORY_DELETE_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: income_history_constants.INCOME_HISTORY_DELETE_FAIL, error};\r\n    }\r\n}\r\n","import {saving_services} from \"../services\";\r\nimport {saving_constants} from \"../constants\";\r\nimport {alertActions} from \"./\";\r\n\r\nexport const saving_actions = {\r\n    saving_insert: saving_insert\r\n};\r\n\r\nfunction saving_insert(dataSaving) {\r\n    return async dispatch => {\r\n        dispatch(request({dataSaving: dataSaving}));\r\n\r\n        return await saving_services.saving_insert(dataSaving).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                dispatch(alertActions.error(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request(data) {\r\n        return {type: saving_constants.SAVING_INSERT_REQUEST, data};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: saving_constants.SAVING_INSERT_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: saving_constants.SAVING_INSERT_FAIL, error};\r\n    }\r\n}\r\n","import {saving_history_service} from \"../services\";\r\nimport {saving_history_constants} from \"../constants\";\r\n\r\nexport const saving_history_actions = {\r\n    saving_history_get: saving_history_get,\r\n    saving_history_delete: saving_history_delete\r\n};\r\n\r\nfunction saving_history_get(fromday, today, queryString) {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await saving_history_service.saving_history_get(fromday, today, queryString).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n    function request() {\r\n        return {type: saving_history_constants.SAVING_HISTORY_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: saving_history_constants.SAVING_HISTORY_GET_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: saving_history_constants.SAVING_HISTORY_FAIL, error};\r\n    }\r\n}\r\n\r\n\r\nfunction saving_history_delete(value) {\r\n    return async dispatch => {\r\n        dispatch(request());\r\n\r\n        return await saving_history_service.saving_history_delete(value).then(\r\n            response => {\r\n                dispatch(success(response));\r\n                return success(response);\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()));\r\n                return failure(error.toString());\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n    function request() {\r\n        return {type: saving_history_constants.SAVING_HISTORY_DELETE_REQUEST};\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: saving_history_constants.SAVING_HISTORY_DELETE_SUCCESS, data};\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: saving_history_constants.SAVING_HISTORY_DELETE_FAIL, error};\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Layout} from \"antd\";\r\n\r\nconst {Header, Content, Footer} = Layout;\r\n\r\nconst FooterComponent = () => {\r\n    return (\r\n        <Footer style={{\r\n            textAlign: 'center'\r\n        }}>\r\n            Design ©2023\r\n            <br/>\r\n            Contact for support <a target={'_blank'} href={'https://www.facebook.com/tanhien.it/'}>Hiền Đoàn</a>\r\n        </Footer>\r\n    )\r\n}\r\nexport default FooterComponent;","import './login.css';\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport {connect} from 'react-redux';\r\nimport React, {Component, useEffect, useState} from 'react';\r\nimport {userActions} from '../../actions';\r\nimport {history} from '../../helpers';\r\nimport {setDefaultLanguage, setLanguage, setTranslations, translate,} from 'react-switch-lang';\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport {Form, Input, Button, Checkbox, Row, Avatar, Col, Switch, Layout} from 'antd';\r\nimport {userConstants} from \"../../constants\";\r\nimport en from \"../../language/en.json\";\r\nimport vi from \"../../language/vi.json\";\r\nimport './../../theme.dark.less';\r\nimport './../../theme.light.less';\r\nimport 'antd/dist/antd.compact.css';\r\nimport FooterComponent from \"../home/footer\";\r\n\r\nconst {Header, Content, Footer, Sider} = Layout;\r\n\r\nconst siderStyle = {\r\n    textAlign: 'center',\r\n    width: '50%',\r\n    lineHeight: '120px',\r\n    color: '#fff',\r\n    backgroundColor: '#3ba0e9',\r\n};\r\n\r\nconst LoginComponent = (props) => {\r\n    const {t, dispatch} = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const [valueLanguage, setValueLanguage] = useState('vi');\r\n    const [theme, setTheme] = useState('light');\r\n    const [classNameHot, setClassNameHot] = useState(theme === 'light' ? 'light-theme' : 'dark-theme');\r\n\r\n    useEffect(() => {\r\n        dispatch(userActions.logout());\r\n        setDefaultLanguage(valueLanguage);\r\n        const now = new Date();\r\n        if (now.getHours() < 18) {\r\n            document.body.classList.remove('dark');\r\n            document.body.classList.add('light');\r\n        } else {\r\n            document.body.classList.remove('light');\r\n            document.body.classList.add('dark');\r\n        }\r\n    }, []);\r\n\r\n    function handleChange(value) {\r\n        const {username, password} = value;\r\n        if (username && password) {\r\n            setLoading(true);\r\n            setTimeout(() => {\r\n                props.dispatch(userActions.login(username, password)).then(response => {\r\n                    if (response.type === userConstants.LOGIN_FAILURE) {\r\n                        setLoading(false);\r\n                    } else {\r\n                        history.push('/');\r\n                    }\r\n                });\r\n            }, 1000);\r\n\r\n        }\r\n    }\r\n\r\n    function handleSetLanguage(key) {\r\n        const lang = key ? 'vi' : 'en';\r\n        setValueLanguage(lang);\r\n        setLanguage(lang);\r\n    }\r\n\r\n    const headerStyle = {\r\n        textAlign: 'center',\r\n        color: '#fff',\r\n        paddingTop: 40\r\n    };\r\n    const contentStyle = {\r\n        textAlign: 'center',\r\n        minHeight: 120,\r\n        lineHeight: '120px',\r\n        color: '#fff',\r\n        backgroundColor: '#108ee9',\r\n    };\r\n    const siderStyle = {\r\n        textAlign: 'center',\r\n        lineHeight: '120px',\r\n        color: '#fff',\r\n        backgroundColor: '#3ba0e9',\r\n        backgroundImage: `url('https://gw.alipayobjects.com/mdn/rms_08e378/afts/img/A*zx7LTI_ECSAAAAAAAAAAAABkARQnAQ')`,\r\n    };\r\n    const footerStyle = {\r\n        textAlign: 'center',\r\n        color: '#fff',\r\n        backgroundColor: '#7dbcea',\r\n    };\r\n\r\n    return (\r\n        <Layout className={\"login-form\"} style={{transition: \"background-color 0.5s ease\"}}>\r\n            <Sider style={siderStyle}></Sider>\r\n            <Layout>\r\n                <Header style={headerStyle}>\r\n                    <Avatar size={200} src={<img src={'https://scontent.fsgn13-2.fna.fbcdn.net/v/t39.30808-6/269870110_4627302557381096_845600942053273274_n.jpg?_nc_cat=109&ccb=1-7&_nc_sid=09cbfe&_nc_ohc=9driW8vCHm8AX81eiDD&_nc_ht=scontent.fsgn13-2.fna&oh=00_AfAtfTPxzNvCNyU8yvMiHrIbl3mEHczIBwdoQnm1cDWo7A&oe=646F07EB'} alt=\"avatar\" />} />\r\n                </Header>\r\n                <Content className=\"site-layout\" style={{padding: '0 50px', marginTop: 64}}>\r\n                    <div className={classNameHot}>\r\n                        <Row align=\"middle\" style={{minHeight: 600}}>\r\n                            <Col span={12} offset={6}>\r\n                                <Form\r\n                                    name=\"normal_login\"\r\n                                    className=\"login-form\"\r\n                                    initialValues={{remember: true}}\r\n                                    onFinish={handleChange}\r\n                                >\r\n                                    <Form.Item\r\n                                        name=\"username\"\r\n                                        rules={[{required: true, message: t('login.txt_username_required')}]}\r\n                                    >\r\n                                        <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                                               placeholder=\"Username\"/>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"password\"\r\n                                        autoComplete=\"off\"\r\n                                        rules={[{required: true, message: t('login.txt_password_required')}]}\r\n                                    >\r\n                                        <Input\r\n                                            prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                            <Checkbox>{t('login.txt_remember')}</Checkbox>\r\n                                        </Form.Item>\r\n\r\n                                        <a className=\"login-form-forgot\" href=\"\">\r\n                                            {t('login.txt_forgot_password')}\r\n                                        </a>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item>\r\n                                        <Button shape={\"round\"} loading={loading} type=\"primary\" htmlType=\"submit\"\r\n                                                className=\"login-form-button\">\r\n                                            {t('login.btn_login')}\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        {t('login.txt_or')} <a href={'/register'}>{t('login.btn_register')}</a>\r\n                                        <Switch\r\n                                                onChange={handleSetLanguage}\r\n                                                checkedChildren=\"Viet\"\r\n                                                unCheckedChildren=\"Eng\"\r\n                                                className=\"login-form-forgot\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Content>\r\n                <FooterComponent/>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nLoginComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {loggingIn} = state.authentication;\r\n    return {\r\n        loggingIn\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true})(translate(LoginComponent));\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('user')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{pathname: '/login', state: {from: props.location}}}/>\r\n    )}/>\r\n)\r\n","export async function groupBy(xs, f) {\r\n    return await xs.reduce(\r\n        (r, v, i, a, k = f(v)) => ((r[k] || (r[k] = [])).push(v), r),\r\n        {}\r\n    );\r\n}\r\n\r\nexport function remove_duplicates_es6(arr) {\r\n    const seen = {};\r\n    const ret_arr = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (!(arr[i] in seen)) {\r\n            ret_arr.push(arr[i]);\r\n            seen[arr[i]] = true;\r\n        }\r\n    }\r\n    return ret_arr;\r\n}\r\n\r\nexport function split_long_array_with_size(bigarray, size) {\r\n    const arrayOfArrays = [];\r\n    for (let i = 0; i < bigarray.length; i += size) {\r\n        arrayOfArrays.push(bigarray.slice(i, i + size));\r\n    }\r\n    return arrayOfArrays;\r\n}","import {Image, Table, Space, Tag, Dropdown, Menu, Button} from 'antd';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {groupBy} from \"../../helpers/helpers\";\r\nimport PropTypes, {bool} from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {translate} from \"react-switch-lang\";\r\nimport {DownOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\n\r\nfunction MultipleComponent(props) {\r\n    const {t} = props;\r\n    const [dataObject, set_dataObject] = useState([]);\r\n    const [loading, isLoading] = useState(true);\r\n    const [defaultPageSize, set_defaultPageSize] = useState(10);\r\n    let numberAttr = 3;\r\n\r\n    const sharedOnCell = (_, index) => {\r\n        const indexValue = index + 1;\r\n        if (indexValue % 5 === 0) {\r\n            return {\r\n                colSpan: 0,\r\n            };\r\n        }\r\n        return {};\r\n    }\r\n\r\n    const YearOnCell = (_, index) => {\r\n        const indexValue = index + 1;\r\n        const number = 5;\r\n        let isAfter = false;\r\n        if (indexValue === 1 || ((indexValue - 1) % number === 0)) {\r\n            isAfter = true;\r\n            return {\r\n                rowSpan: 4,\r\n            };\r\n        }\r\n        if (indexValue % number === 0) {\r\n            isAfter = true;\r\n            return {\r\n                colSpan: 15,\r\n            }\r\n        }\r\n\r\n        if (!isAfter) {\r\n            return {\r\n                rowSpan: 0,\r\n            };\r\n\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    const renderContent = (value, row, index) => {\r\n        const indexValue = index + 1;\r\n        const money = value === null ? 0 : `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        let colorMoney;\r\n        if ((index + 2) % 5 === 0) {\r\n            if (parseInt(money) > 0) {\r\n                colorMoney = <Tag color=\"rgb(11, 130, 53)\">{money}</Tag>;\r\n            } else if (parseInt(money) < 0) {\r\n                colorMoney = <Tag color=\"#f81d22\">{money}</Tag>;\r\n            } else {\r\n                colorMoney = money;\r\n            }\r\n            numberAttr = index;\r\n\r\n        } else {\r\n            colorMoney = money;\r\n        }\r\n\r\n        const obj = {\r\n            children: colorMoney,\r\n            props: {\r\n                style: {color: row.color},\r\n            },\r\n        };\r\n        return obj;\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: t('chart.year'),\r\n            dataIndex: 'year',\r\n            responsive: ['md'],\r\n            align: 'center',\r\n            width: 100,\r\n            fixed: 'left',\r\n            sorter: (a, b) => a.year - b.year,\r\n            render: (value, row, index) => {\r\n                const indexValue = index + 1;\r\n                const number = 5;\r\n                let isAfter = false;\r\n                const obj = {\r\n                    children: <Tag color={\"geekblue\"} key={value}>\r\n                        {value}\r\n                    </Tag>,\r\n                    props: {\r\n                        style: {},\r\n                    },\r\n                };\r\n\r\n                if (indexValue === 1 || ((indexValue - 1) % number === 0)) {\r\n                    isAfter = true;\r\n                }\r\n\r\n                if (indexValue % number === 0) {\r\n                    obj.children = null;\r\n                    obj.props.style.height = \"40px\";\r\n                    isAfter = true;\r\n                }\r\n\r\n                return obj;\r\n\r\n            },\r\n            onCell: YearOnCell\r\n        },\r\n        {\r\n            title: t('text.txt_type'),\r\n            responsive: ['md'],\r\n            dataIndex: 'type',\r\n            align: 'center',\r\n            render: (value, row, index) => {\r\n                let val = null;\r\n                switch (row.type) {\r\n                    case \"income\":\r\n                        val = (<Space direction=\"horizontal\">\r\n                            {t(\"income.name\")}\r\n                        </Space>);\r\n                        break;\r\n                    case \"expense\":\r\n                        val = (<Space direction=\"horizontal\">\r\n                            {t(\"expense.name\")}\r\n                        </Space>);\r\n                        break;\r\n                    case \"saving\":\r\n                        val = (<Space direction=\"horizontal\">\r\n                            {t(\"saving.name\")}\r\n                        </Space>);\r\n                        break;\r\n                    case \"after\":\r\n                        val = <Tag color={row.color}>{t(\"text.txt_remaining\")}</Tag>;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                const obj = {\r\n                    children: val,\r\n                    props: {\r\n                        style: {background: row.backgroundColor, color: row.color},\r\n                    }\r\n                }\r\n                const indexValue = index + 1;\r\n                if (indexValue % 5 === 0) {\r\n                    obj.children = null;\r\n                }\r\n                return obj;\r\n            },\r\n\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.January'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_1',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.February'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_2',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.March'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_3',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.April'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_4',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.May_'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_5',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.June'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_6',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.July'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_7',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.August'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_8',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.September'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_9',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.October'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_10',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.November'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_11',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('month.December'),\r\n            responsive: ['md'],\r\n            dataIndex: 'month_12',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell\r\n        },\r\n        {\r\n            title: t('home.total'),\r\n            responsive: ['md'],\r\n            dataIndex: 'total',\r\n            render: renderContent,\r\n            align: 'center',\r\n            onCell: sharedOnCell,\r\n            fixed: 'right',\r\n            width: 100,\r\n        },\r\n    ];\r\n\r\n    function fn_render_data_multi(dataIncome, dataExpense, dataSaving, listYear) {\r\n        let myArr = [];\r\n        listYear.map((data_value, index) => {\r\n            let i,\r\n                arrayIncome = {total: 0, color: ''},\r\n                arrayExpense = {total: 0, color: ''},\r\n                arraySaving = {total: 0, color: ''},\r\n                arrayCountMoney = {total: 0};\r\n\r\n            arrayCountMoney.year = data_value.year;\r\n            arrayIncome.year = data_value.year;\r\n            arrayExpense.year = data_value.year;\r\n            arraySaving.year = data_value.year;\r\n\r\n            for (i = 1; i <= 12; i++) {\r\n                let countMoney = 0;\r\n                // --- check data income\r\n                if (dataIncome) {\r\n                    let val;\r\n                    dataIncome.map((data, index) => {\r\n                        if (data.period === i && data_value.year === data.year) {\r\n                            val = parseInt(data.totalMoney);\r\n                        }\r\n                    });\r\n\r\n                    if (val) {\r\n                        arrayIncome['month_' + i] = val;\r\n                        arrayIncome.total += val;\r\n                        countMoney += val;\r\n                    } else {\r\n                        arrayIncome['month_' + i] = 0;\r\n                    }\r\n\r\n                    arrayIncome.type = \"income\";\r\n                    arrayIncome.color = colorOptions.income;\r\n                }\r\n\r\n                if (dataExpense) {\r\n                    let val;\r\n                    dataExpense.map((data, index) => {\r\n                        if (data.period === i && data_value.year === data.year) {\r\n                            val = parseInt(data.totalMoney);\r\n                        }\r\n                    });\r\n\r\n                    if (val) {\r\n                        arrayExpense['month_' + i] = val;\r\n                        arrayExpense.total += val;\r\n                        countMoney -= val;\r\n\r\n                    } else {\r\n                        arrayExpense['month_' + i] = 0;\r\n                    }\r\n\r\n                    arrayExpense.type = \"expense\";\r\n                    arrayExpense.color = colorOptions.expense;\r\n                }\r\n\r\n                if (dataSaving) {\r\n                    let val;\r\n                    dataSaving.map((data, index) => {\r\n                        if (data.period === i && data_value.year === data.year) {\r\n                            val = parseInt(data.totalMoney);\r\n                        }\r\n                    });\r\n\r\n                    if (val) {\r\n                        arraySaving['month_' + i] = val;\r\n                        arraySaving.total += val;\r\n                        countMoney -= val;\r\n                    } else {\r\n                        arraySaving['month_' + i] = 0;\r\n                    }\r\n\r\n                    arraySaving.type = \"saving\";\r\n                    arraySaving.color = colorOptions.saving;\r\n                }\r\n\r\n                arrayCountMoney.type = \"after\";\r\n                arrayCountMoney['month_' + i] = countMoney;\r\n                arrayCountMoney.total += countMoney;\r\n            }\r\n\r\n            myArr.push(arrayIncome)\r\n            myArr.push(arrayExpense)\r\n            myArr.push(arraySaving)\r\n            myArr.push(arrayCountMoney)\r\n\r\n            let pushtu = {\r\n                year: data_value.year,\r\n                type: null,\r\n                month_1: null,\r\n                month_2: null,\r\n                month_3: null,\r\n                month_4: null,\r\n                month_5: null,\r\n                month_6: null,\r\n                month_7: null,\r\n                month_8: null,\r\n                month_9: null,\r\n                month_10: null,\r\n                month_11: null,\r\n                month_12: null,\r\n                total: null,\r\n                color: null,\r\n                backgroundColor: null\r\n            }\r\n            myArr.push(pushtu);\r\n        });\r\n\r\n        let ii = 0, array = [], numIndex = 0;\r\n        groupBy(myArr, function (car) {\r\n            return car.year;\r\n        }).then(data => {\r\n            Object.keys(data).map(key => {\r\n                const value = data[key];\r\n                if (value.length > 1) {\r\n                    array.push({\r\n                        row: ii === 0 ? ii : numIndex,\r\n                        col: 0,\r\n                        rowspan: value.length,\r\n                        colspan: 1\r\n                    });\r\n                }\r\n                numIndex += value.length;\r\n                ii++;\r\n            });\r\n\r\n        }).finally(() => {\r\n            let xObject = [];\r\n            myArr = myArr.sort((a, b) => {\r\n                return b.year - a.year;\r\n            });\r\n            myArr.map((value, i) => {\r\n                xObject.push({\r\n                    key: i,\r\n                    year: value.year,\r\n                    type: value.type,\r\n                    month_1: value.month_1,\r\n                    month_2: value.month_2,\r\n                    month_3: value.month_3,\r\n                    month_4: value.month_4,\r\n                    month_5: value.month_5,\r\n                    month_6: value.month_6,\r\n                    month_7: value.month_7,\r\n                    month_8: value.month_8,\r\n                    month_9: value.month_9,\r\n                    month_10: value.month_10,\r\n                    month_11: value.month_11,\r\n                    month_12: value.month_12,\r\n                    total: value.total,\r\n                    color: value.color,\r\n                    backgroundColor: value.backgroundColor\r\n                })\r\n            })\r\n            isLoading(false);\r\n            set_dataObject(xObject);\r\n\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.data_all_year.data) {\r\n            fn_render_data_multi(\r\n                props.data_all_year.data.incomeDto,\r\n                props.data_all_year.data.expenseDto,\r\n                props.data_all_year.data.savingDto,\r\n                props.data_all_year.data.listYear\r\n            );\r\n        }\r\n    }, [props.data_all_year]);\r\n\r\n\r\n    function onClick(e) {\r\n        const num_rows = parseInt(e.key);\r\n        set_defaultPageSize(num_rows);\r\n    }\r\n\r\n    const items = [\r\n        {\r\n            label: (\r\n                <span>\r\n                    5 {t('text.txt_row').toLowerCase()}\r\n                </span>\r\n            ),\r\n            key: '5',\r\n        },\r\n        {\r\n            label: (\r\n                <span>\r\n                    10 {t('text.txt_row').toLowerCase()}\r\n                </span>\r\n            ),\r\n            key: '10',\r\n        },\r\n        {\r\n            label: (\r\n                <span>\r\n                    15 {t('text.txt_row').toLowerCase()}\r\n                </span>\r\n            ),\r\n            key: '15',\r\n        },\r\n        {\r\n            label: (\r\n                <span>\r\n                    20 {t('text.txt_row').toLowerCase()}\r\n                </span>\r\n            ),\r\n            key: '20',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Space wrap>\r\n                <Dropdown menu={{\r\n                    items,\r\n                    onClick,\r\n                }}>\r\n                    <Button onClick={(e) => e.preventDefault()}>\r\n                        {t('text.txt_display')}<DownOutlined/>\r\n                    </Button>\r\n                </Dropdown>\r\n            </Space>\r\n            <br/>\r\n            <br/>\r\n            <Table size={\"large\"}\r\n                   columns={columns}\r\n                   loading={loading}\r\n                   dataSource={dataObject}\r\n                   pagination={{\r\n                       total: dataObject.length,\r\n                       pageSize: defaultPageSize\r\n                   }}\r\n                   scroll={{\r\n                       x: 1400,\r\n                   }}\r\n                   bordered/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nMultipleComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {authentication} = state;\r\n    return {\r\n        authentication\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(MultipleComponent));\r\n","import React, {createRef, useEffect, useRef, useState} from \"react\";\r\nimport {Button, Row, message, Spin, Col, Space, Badge, Card, Typography} from 'antd';\r\nimport Handsontable from \"handsontable\";\r\nimport {isMobile} from \"react-device-detect\";\r\nimport Moment from \"moment\";\r\nimport {HotTable} from \"@handsontable/react\";\r\nimport PropTypes, {func} from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {translate} from \"react-switch-lang\";\r\nimport {incomeActions} from \"../../actions\";\r\nimport {incomeConstants} from \"../../constants\";\r\nimport {SaveFilled} from '@ant-design/icons';\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\n\r\nconst {Title} = Typography;\r\n\r\nconst IncomeComponent = (props) => {\r\n    const {t} = props;\r\n    const [dataHandsome, setDataHandsome] = useState([{day: null, actions: null, money: null, notes: null}]);\r\n    const [loading, setLoading] = useState(false);\r\n    const ref_income = useRef(null);\r\n    let [count_total, set_count_total] = useState(0);\r\n\r\n    function fnColHeaders(col) {\r\n        switch (col) {\r\n            case 0:\r\n                return t('text.txt_day');\r\n            case 1:\r\n                return t('text.txt_Todo');\r\n            case 2:\r\n                return t('text.txt_Money');\r\n            case 3:\r\n                return t('text.txt_notes');\r\n        }\r\n    }\r\n\r\n    const hotSetting = {\r\n        ref: ref_income,\r\n        data: dataHandsome,\r\n        rowHeaders: true,\r\n        rowHeights: 34,\r\n        height: 370,\r\n        minRows: 10,\r\n        //maxCols: 3,\r\n        minSpareRows: 1,\r\n        stretchH: \"all\",\r\n        manualRowResize: false,\r\n        manualColumnResize: false,\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        contextMenu: true,\r\n        fixedRowsBottom: 0,\r\n        column: [\r\n            {data: 'day'},\r\n            {data: 'actions'},\r\n            {data: 'money'},\r\n            {data: 'notes'}\r\n        ],\r\n        cells: function (row, col, prop) {\r\n            const cellProperties = {};\r\n            if (prop === 'day') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.type = \"date\";\r\n                    cellProperties.dateFormat = 'DD/MM/YYYY';\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.DateRenderer.apply(this, arguments);\r\n                }\r\n            } else if (prop === 'actions') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.className = 'htLeft htMiddle';\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'money') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    if (value >= 100000) {\r\n                    }\r\n                    if (value >= 1000000) {\r\n                        td.style.fontWeight = \"bold\";\r\n                    }\r\n                    td.style.color = colorOptions.income;\r\n                    cellProperties.type = \"numeric\";\r\n                    cellProperties.numericFormat = {\r\n                        pattern: \"0,0 VNĐ\"\r\n                    }\r\n                    cellProperties.readOnly = false;\r\n                    cellProperties.className = 'htRight htMiddle';\r\n                    Handsontable.renderers.NumericRenderer.apply(this, arguments);\r\n                }\r\n            } else if (prop === 'notes') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.className = 'htLeft';\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                };\r\n            }\r\n            return cellProperties;\r\n        },\r\n        beforeChange: (source, changes) => {\r\n            if (source === \"loadData\") {\r\n                return;\r\n            }\r\n            let row = source[0][0], columns = source[0][1], newValues = source[0][3];\r\n            switch (columns) {\r\n                case 'money':\r\n                    if (!Number(newValues)) {\r\n                        if (newValues !== null) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    const actions = ref_income.current.hotInstance.getDataAtRowProp(row, 'actions');\r\n                    if (actions === null) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                case 'actions':\r\n                    if (newValues){\r\n                        if (newValues.length > 50) {\r\n                            message.error('dữ liệu không được quá 50 ký tự');\r\n                            return false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'notes':\r\n                    if (newValues){\r\n                        if (newValues.length > 50) {\r\n                            message.error('ghi chú không được quá 50 ký tự');\r\n                            return false;\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n            }\r\n        },\r\n        afterChange: (source, changes) => {\r\n            fnAfterChange(changes, source)\r\n        },\r\n        afterInit: function () {\r\n            if (ref_income) {\r\n                if (ref_income.current !== null) {\r\n                    setTimeout(() => {\r\n                        ref_income.current.hotInstance.render();\r\n                    }, 200);\r\n\r\n                }\r\n            }\r\n        },\r\n        afterSelectionEnd: function (r, c, r2, c2) {\r\n            if (isMobile) {\r\n                if (this.getActiveEditor()) {\r\n                    this.getActiveEditor().enableFullEditMode();\r\n                    this.getActiveEditor().beginEditing();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function fnAfterChange(changes, source) {\r\n        if (!source) {\r\n            return;\r\n        }\r\n        source.forEach(function (change) {\r\n            const toDay = Moment().format('DD/MM/YYYY');\r\n            const row = change[0], col = change[1], newVal = change[3];\r\n            const days = ref_income.current.hotInstance.getDataAtRowProp(row, 'day');\r\n            switch (col) {\r\n                case \"actions\":\r\n                    if (newVal) {\r\n                        if (!days) {\r\n                            ref_income.current.hotInstance.setDataAtRowProp(row, 'day', toDay, \"source\");\r\n                        }\r\n                    } else {\r\n                        ref_income.current.hotInstance.setDataAtRowProp(row, 'day', null, \"source\");\r\n                    }\r\n                    break;\r\n                case 'day':\r\n                    if (!Moment(new Date(newVal)).isValid()) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                case 'money':\r\n                    const object_income = ref_income.current.hotInstance.getSourceData();\r\n                    let total_money = 0;\r\n                    if (object_income.length > 0) {\r\n                        object_income.map((value, i) => {\r\n                            if (Number(value.money)) {\r\n                                total_money += parseInt(value.money);\r\n                            }\r\n                        });\r\n                    }\r\n                    set_count_total(total_money);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ref_income) {\r\n            if (ref_income.current !== null) {\r\n                setTimeout(() => {\r\n                    ref_income.current.hotInstance.render();\r\n                }, 0);\r\n\r\n            }\r\n        }\r\n    }, [props.activeKey]);\r\n\r\n    async function fnSaveIncomes() {\r\n        setLoading(true);\r\n        let DataObject = [];\r\n        dataHandsome.map((value, i) => {\r\n            if (value.money > 0 && value.day && value.actions) {\r\n                value.money = value.money.toString();\r\n                DataObject.push(value);\r\n            }\r\n        });\r\n        if (DataObject.length > 0) {\r\n            return await props\r\n                .dispatch(incomeActions.insertIncome(DataObject))\r\n                .then(response => {\r\n                    setLoading(false);\r\n                    if (response.type === incomeConstants.INCOME_INSERT_FAIL) {\r\n                        message.error(response.error);\r\n                    } else {\r\n                        message.success(t('notification.notification_success'));\r\n                        const dataEmpty = [{day: null, actions: null, money: null, notes: null}]\r\n                        setDataHandsome(dataEmpty);\r\n                        set_count_total(0);\r\n                    }\r\n                    return response;\r\n                });\r\n        } else {\r\n            message.error(t('notification.notification_empty'));\r\n            setLoading(false);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function functionPassed() {\r\n        fnSaveIncomes().then(response => {\r\n            if (response) {\r\n                (async function fnc() {\r\n                    await props.prepare_callback();\r\n                })();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={props.classNameHot}>\r\n            <Spin size=\"default\" tip={\"Running\"} spinning={loading} delay={500}>\r\n                <HotTable colHeaders={fnColHeaders} style={{zIndex: 0}} ref={ref_income} settings={hotSetting}/>\r\n            </Spin>\r\n            <br/>\r\n            <Row>\r\n                <Col span={12} style={{textAlign: 'center'}}>\r\n                    <Space\r\n                        direction=\"vertical\"\r\n                        size=\"middle\"\r\n                        style={{\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <Badge.Ribbon text={t('income.name')} color={colorOptions.income}>\r\n                            <Card headStyle={{fontWeight: '700'}} title={t('text.txt_total')} size=\"small\">\r\n                                <Title style={{color: colorOptions.income}} level={2}>\r\n                                    {`${count_total}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            </Card>\r\n                        </Badge.Ribbon>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={12} style={{textAlign: 'right'}}>\r\n                    <Space direction=\"vertical\">\r\n                        <Space wrap>\r\n                            <Button type=\"primary\"\r\n                                    style={{backgroundColor: 'rgb(11, 130, 53)', border: 'none'}}\r\n                                    loading={loading}\r\n                                    icon={<SaveFilled/>}\r\n                                    onClick={() => functionPassed()}>\r\n                                {t('button.btn_Save')}\r\n                            </Button>\r\n                        </Space>\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nIncomeComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {authentication} = state;\r\n    return {\r\n        authentication\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(IncomeComponent));\r\n\r\n","import React, {createRef, useEffect, useRef, useState} from \"react\";\r\nimport moment from 'moment';\r\nimport Handsontable from \"handsontable\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DownloadOutlined,\r\n    LoadingOutlined,\r\n    SearchOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Card,\r\n    Typography,\r\n    Col,\r\n    Row,\r\n    Badge,\r\n    Spin,\r\n    Popconfirm,\r\n    message,\r\n    DatePicker,\r\n    Space, Input\r\n} from \"antd\";\r\nimport {translate} from \"react-switch-lang\";\r\nimport {HotTable} from \"@handsontable/react\";\r\n\r\nimport {income_history_actions} from \"../../actions/index\";\r\nimport {income_history_constants} from \"../../constants\";\r\nimport {groupBy, remove_duplicates_es6} from \"../../helpers/helpers\";\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\n\r\nconst {RangePicker} = DatePicker;\r\nconst {Title} = Typography;\r\nconst antIcon = (\r\n    <LoadingOutlined\r\n        style={{\r\n            fontSize: 24,\r\n        }}\r\n        spin\r\n    />\r\n);\r\nconst IncomeHistoryComponent = (props) => {\r\n    const {t} = props;\r\n    const [data_income_history, set_data_income_history] = useState([{\r\n        day: null,\r\n        actions: null,\r\n        money: null,\r\n        id: null\r\n    }]);\r\n    const [loading, is_loading] = useState(false);\r\n    const [isChecked, set_isChecked] = useState(false);\r\n    const [is_has_data, set_is_has_data] = useState(false);\r\n    let [list_checked_id, set_list_checked_id] = useState([]);\r\n    let [count_total, set_count_total] = useState(0);\r\n    const [firstDay, set_firstDay] = useState(moment().startOf(\"month\"));\r\n    const [lastDay, set_lastDay] = useState(moment().endOf(\"month\"));\r\n    const [data_merge_Cells, set_data_merge_Cells] = useState([]);\r\n    const ref_income_history = useRef();\r\n    const [input_text, set_input_text] = useState('');\r\n\r\n    function fnColHeaders(col) {\r\n        switch (col) {\r\n            case 0:\r\n                return t('text.txt_day');\r\n            case 1:\r\n                return t('text.txt_Todo');\r\n            case 2:\r\n                return t('text.txt_Money');\r\n            case 3:\r\n                return t('text.txt_action');\r\n        }\r\n    }\r\n\r\n    const fnOnchangeCheckBoxSelectAll = (e) => {\r\n        set_isChecked(e.target.checked);\r\n        if (!e.target.checked) {\r\n            set_list_checked_id([]);\r\n        }\r\n        let array_id = [];\r\n        const dataObject = data_income_history.map(item => {\r\n                if (item) {\r\n                    if (item.id !== null) {\r\n                        if (e.target.checked) {\r\n                            array_id.push(item.id);\r\n                        }\r\n                        return {\r\n                            ...item, available: e.target.checked\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        const arrValue = remove_duplicates_es6(array_id);\r\n        set_list_checked_id(arrValue);\r\n        set_data_income_history(dataObject);\r\n    };\r\n\r\n    const hotSetting_income_history = {\r\n        ref: ref_income_history,\r\n        data: data_income_history,\r\n        rowHeaders: true,\r\n        rowHeights: 34,\r\n        height: 370,\r\n        minRows: 10,\r\n        minSpareRows: 0,\r\n        maxCols: 4,\r\n        stretchH: \"all\",\r\n        manualRowResize: false,\r\n        manualColumnResize: true,\r\n        contextMenu: false,\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        mergeCells: data_merge_Cells,\r\n        fixedRowsBottom: 0,\r\n        comments: true,\r\n        column: [\r\n            {\r\n                data: 'day',\r\n                type: \"date\",\r\n                dateFormat: \"DD/MM/YYYY\",\r\n                correctFormat: true,\r\n            },\r\n            {\r\n                data: \"actions\",\r\n                type: \"text\"\r\n            },\r\n            {\r\n                data: 'money'\r\n            },\r\n            {\r\n                data: \"id\",\r\n                readOnly: true,\r\n                className: \"htCenter htMiddle\"\r\n            },\r\n            {\r\n                data: \"available\",\r\n                type: \"checkbox\",\r\n                checkedTemplate: 1,\r\n                uncheckedTemplate: 0\r\n            }\r\n        ],\r\n        cells: function (row, col, prop) {\r\n            const cellProperties = {};\r\n            if (prop === 'day') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.type = \"date\";\r\n                    cellProperties.dateFormat = 'DD/MM/YYYY';\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    Handsontable.renderers.DateRenderer.apply(this, arguments);\r\n\r\n                }\r\n            } else if (prop === 'actions') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    const notes = instance.getDataAtRowProp(row, 'notes');\r\n                    if (notes !== null) {\r\n                        cellProperties.comment = {value: notes, readOnly: true};\r\n                    }\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htMiddle\";\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'money') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.type = \"numeric\";\r\n                    cellProperties.numericFormat = {\r\n                        pattern: \"0,0 VNĐ\"\r\n                    }\r\n                    if (value > 100000) {\r\n                        td.style.color = colorOptions.income;\r\n                    }\r\n                    if (value >= 1000000) {\r\n                        td.style.fontWeight = \"bold\";\r\n                        td.style.color = colorOptions.income;\r\n                    }\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htRight htMiddle\";\r\n                    Handsontable.renderers.NumericRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'available') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    td.style.textAlign = 'center';\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    cellProperties.readOnly = true;\r\n                    const id = instance.getDataAtRowProp(row, 'id');\r\n                    if (id !== null) {\r\n                        Handsontable.renderers.CheckboxRenderer.apply(this, arguments);\r\n                    } else {\r\n                        Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n\r\n                    }\r\n                };\r\n            }\r\n\r\n            return cellProperties;\r\n        },\r\n        afterChange: function (change, source) {\r\n            if (source !== 'loadData' && source !== 'afterChange') {\r\n                change.forEach(function (changes) {\r\n                    const row = changes[0], col = changes[1], newVal = changes[3];\r\n                    const id = ref_income_history.current.hotInstance.getDataAtRowProp(row, 'id');\r\n                    if (col === \"available\") {\r\n                        if (newVal) {\r\n                            set_list_checked_id(value => [...value, id]);\r\n                        } else {\r\n                            const array_value = list_checked_id.filter(function (item) {\r\n                                return item !== id;\r\n                            });\r\n                            set_list_checked_id(array_value);\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n        },\r\n        afterInit: function () {\r\n            if (ref_income_history) {\r\n                if (ref_income_history.current !== null) {\r\n                    setTimeout(() => {\r\n                        ref_income_history.current.hotInstance.render();\r\n                    }, 200);\r\n\r\n                }\r\n            }\r\n        },\r\n        afterOnCellMouseDown: function (event, coords, TD) {\r\n            // kiểm tra nếu coords === 3 là cột checkbox\r\n            if (coords) {\r\n                if (coords.col === 3) {\r\n                    if (coords.row !== -1) {\r\n                        const id = ref_income_history.current.hotInstance.getDataAtRowProp(coords.row, 'id');\r\n                        if (id > 0) {\r\n                            const isCheck = ref_income_history.current.hotInstance.getDataAtCell(coords.row, coords.col);\r\n                            ref_income_history.current.hotInstance.setDataAtRowProp(coords.row, 'available', !isCheck, \"source\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        afterSelection: function (row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n        }\r\n    }\r\n\r\n    function cancel() {\r\n\r\n    }\r\n\r\n    async function confirm() {\r\n        // kiểm tra list id có dữ liệu không, nếu có thì thực hiện xóa\r\n        if (list_checked_id.length > 0) {\r\n            is_loading(true);\r\n            await props\r\n                .dispatch(income_history_actions.income_history_delete(list_checked_id))\r\n                .then(response => {\r\n                    if (response.type === income_history_constants.INCOME_HISTORY_DELETE_SUCCESS) {\r\n                        message.success(t('notification.notification_remove_success'));\r\n                        set_list_checked_id([]);\r\n                        setTimeout(() => {\r\n                            fn_search_income_history().then(r => {\r\n                                (async function fnc() {\r\n                                    await props.prepare_callback();\r\n                                })();\r\n                            });\r\n                        }, 1000);\r\n                    } else {\r\n                        message.error(t('notification.notification_remove_failed'));\r\n                    }\r\n                    is_loading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fn_search_income_history(firstDay, lastDay).then(r => {\r\n            });\r\n        }, 1000);\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (ref_income_history) {\r\n            if (ref_income_history.current !== null) {\r\n                setTimeout(() => {\r\n                    ref_income_history.current.hotInstance.render();\r\n                }, 100);\r\n\r\n            }\r\n        }\r\n    }, [props.activeKey]);\r\n\r\n\r\n    useEffect(() => {\r\n        // Kiểm tra nếu có check từ 1 dòng trở lên thì hiển thị nút xóa\r\n\r\n        if (list_checked_id.length > 0) {\r\n            set_isChecked(true);\r\n        } else {\r\n            // Ngược lại thì ẩn nút xóa\r\n            set_isChecked(false);\r\n        }\r\n    }, [list_checked_id]);\r\n\r\n    async function fn_search_income_history() {\r\n        is_loading(true);\r\n        let firstDay_ = moment(firstDay);\r\n        let lastDay_ = moment(lastDay);\r\n\r\n        if (firstDay_._isValid) {\r\n            firstDay_ = firstDay_.format(\"DD-MM-YYYY\");\r\n        } else {\r\n            firstDay_ = '';\r\n        }\r\n\r\n        if (lastDay_._isValid) {\r\n            lastDay_ = lastDay_.format(\"DD-MM-YYYY\");\r\n        } else {\r\n            lastDay_ = '';\r\n        }\r\n\r\n        await props.dispatch(income_history_actions.income_history_get(firstDay_, lastDay_, input_text)).then(response => {\r\n            if (response.type === income_history_constants.INCOME_HISTORY_GET_SUCCESS) {\r\n                if (response.data.length > 0) {\r\n                    response.data.map((val, i) => {\r\n                        val.day = moment(new Date(val.day)).format(\"DD/MM/YYYY\");\r\n                        val.money = parseInt(val.money);\r\n                    });\r\n\r\n                    groupBy(response.data, function (car) {\r\n                        return car.day;\r\n                    }).then((data, a) => {\r\n                        let ii = 0, array = [], numIndex = 0;\r\n                        Object.keys(data).map(key => {\r\n                                const value = data[key];\r\n                                if (value.length > 1) {\r\n                                    array.push({\r\n                                        row: ii === 0 ? ii : numIndex,\r\n                                        col: 0,\r\n                                        rowspan: value.length,\r\n                                        colspan: 1\r\n                                    });\r\n                                }\r\n\r\n                                numIndex += value.length;\r\n                                ii++;\r\n                            }\r\n                        )\r\n\r\n                        const dataCallback = [];\r\n                        response.data.map((val, i) => {\r\n                            dataCallback.push({\r\n                                day: val.day,\r\n                                actions: val.actions,\r\n                                money: val.money,\r\n                                available: false,\r\n                                id: val.id,\r\n                                notes: val.notes,\r\n                            })\r\n                        });\r\n\r\n                        setTimeout(() => {\r\n                            is_loading(false);\r\n                            set_is_has_data(true);\r\n                            set_data_income_history(dataCallback);\r\n                            set_data_merge_Cells(array);\r\n\r\n                            const countTotals = response.data.reduce((n, {money}) => n + Number(money), 0);\r\n                            if (countTotals > 0) {\r\n                                set_count_total(countTotals);\r\n                            }\r\n\r\n                            message.success(t('notification.notification_load_data_success'));\r\n                        }, 1000);\r\n\r\n                    });\r\n                } else {\r\n                    setTimeout(() => {\r\n                        is_loading(false);\r\n                        set_data_income_history([{\r\n                            day: null,\r\n                            actions: null,\r\n                            money: null,\r\n                            available: 0,\r\n                            id: null,\r\n                            notes: null,\r\n                        }]);\r\n                        set_count_total(0);\r\n                        set_data_merge_Cells([]);\r\n                        message.warning(t('notification.notification_data_empty'));\r\n                    }, 1000);\r\n                }\r\n\r\n\r\n            } else {\r\n                message.error(response.error);\r\n                setTimeout(() => {\r\n                    is_loading(false);\r\n                }, 1000);\r\n            }\r\n        });\r\n    }\r\n\r\n    function fnSelectDatePicker(dates, dateStrings) {\r\n        const fromDays = dateStrings[0], toDays = dateStrings[1];\r\n        set_firstDay(fromDays);\r\n        set_lastDay(toDays);\r\n        // fn_search_income_history().then(r => {\r\n        // });\r\n    }\r\n\r\n    function fnOnChange(dates, dateStrings) {\r\n        const fromDays = dateStrings[0], toDays = dateStrings[1];\r\n        set_firstDay(fromDays);\r\n        set_lastDay(toDays);\r\n    }\r\n\r\n    function exports_income() {\r\n        const hot = ref_income_history.current.hotInstance;\r\n        const exportPlugin = hot.getPlugin('exportFile');\r\n        exportPlugin.downloadFile('csv', {\r\n            bom: true,\r\n            columnDelimiter: ',',\r\n            columnHeaders: true,\r\n            exportHiddenColumns: true,\r\n            exportHiddenRows: true,\r\n            fileExtension: 'csv',\r\n            filename: 'Handsontable-CSV-file_[YYYY]-[MM]-[DD]',\r\n            mimeType: 'text/csv;charset=utf-8',\r\n            rowDelimiter: '\\r\\n',\r\n            rowHeaders: true\r\n        });\r\n\r\n    }\r\n\r\n    function fn_input_onChange(e) {\r\n        set_input_text(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={props.classNameHot}>\r\n            <Spin size=\"default\" tip={t('text.txt_loading')} indicator={antIcon} spinning={loading}>\r\n                <Row justify=\"space-around\" align=\"middle\">\r\n                    <Col span={12} offset={3}>\r\n                        <RangePicker style={{width: '100%'}}\r\n                                     defaultValue={\r\n                                         [\r\n                                             moment(lastDay, 'DD-MM-YYYY'),\r\n                                             moment(firstDay, 'DD-MM-YYYY')\r\n                                         ]\r\n                                     }\r\n                                     onChange={fnOnChange}\r\n                                     onCalendarChange={fnSelectDatePicker}\r\n                                     dateRender={current => {\r\n                                         return (\r\n                                             <div className=\"ant-picker-cell-inner\" style={{fontSize: 13}}>\r\n                                                 {current.date()}\r\n                                             </div>\r\n                                         );\r\n                                     }}\r\n                        />\r\n                    </Col>\r\n                    <Col span={8} offset={1}>\r\n                        <Space wrap>\r\n                            {is_has_data && (\r\n                                <Checkbox onChange={fnOnchangeCheckBoxSelectAll}>\r\n                                    {t('text.txt_select_all')}\r\n                                </Checkbox>\r\n                            )}\r\n                            {isChecked && (\r\n                                <Popconfirm\r\n                                    title={t('button.btn_remove_title')}\r\n                                    onConfirm={confirm}\r\n                                    onCancel={cancel}\r\n                                    okText={t('button.btn_yes_txt')}\r\n                                    cancelText={t('button.btn_no_txt')}\r\n                                >\r\n                                    <Button type=\"primary\" danger> {t('button.btn_remove_text')} </Button>\r\n                                </Popconfirm>\r\n                            )}\r\n                        </Space>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <HotTable style={{zIndex: 0}}\r\n                          ref={ref_income_history}\r\n                          settings={hotSetting_income_history}\r\n                          colHeaders={fnColHeaders}\r\n                />\r\n                <br/>\r\n                <Row>\r\n                    <Col span={12} push={2}>\r\n                        <Input placeholder={t('input.input_search_text')} allowClear onChange={fn_input_onChange}/>\r\n                    </Col>\r\n                    <Col span={12} style={{textAlign: 'right'}}>\r\n                        <Space direction=\"vertical\">\r\n                            <Space wrap>\r\n                                <Button type=\"primary\"\r\n                                        style={{backgroundColor: 'rgb(11, 130, 53)', border: 'none'}}\r\n                                        loading={loading}\r\n                                        icon={<SearchOutlined/>}\r\n                                        size={'middle'}\r\n                                        onClick={fn_search_income_history}>\r\n                                    {t('button.btn_search')}\r\n                                </Button>\r\n                                <Button onClick={() => exports_income()} disabled={loading} type=\"default\"\r\n                                        icon={<DownloadOutlined/>} size={'middle'}>\r\n                                    Tải xuống\r\n                                </Button>\r\n                            </Space>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row gutter={16} align={\"center\"}>\r\n                    <Col span={12} style={{textAlign: 'center'}}>\r\n                        <Badge.Ribbon text={t('income.name')} color={colorOptions.income}>\r\n                            <Card headStyle={{fontWeight: '700'}} title={t('text.txt_total')} size=\"small\">\r\n                                <Title style={{color: colorOptions.income}} level={2}>\r\n                                    {`${count_total}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            </Card>\r\n                        </Badge.Ribbon>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nIncomeHistoryComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {authentication} = state;\r\n    return {\r\n        authentication\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(IncomeHistoryComponent));\r\n","import React, {createRef, useEffect, useRef, useState} from \"react\";\r\nimport {Button, Row, Spin, message, Skeleton, Col, Badge, Card, Space, Typography} from \"antd\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {translate} from 'react-switch-lang';\r\nimport {HotTable} from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport {isMobile} from 'react-device-detect';\r\nimport Moment from 'moment';\r\nimport {saving_actions} from \"../../actions\";\r\nimport {saving_constants} from \"../../constants\";\r\nimport {LoadingOutlined, SaveFilled} from '@ant-design/icons';\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\n\r\nconst {Title} = Typography;\r\nconst antIcon = (\r\n    <LoadingOutlined\r\n        style={{\r\n            fontSize: 24,\r\n        }}\r\n        spin\r\n    />\r\n);\r\n\r\nconst SavingComponent = (props) => {\r\n    const {t} = props;\r\n    const [dataHandsome, setDataHandsome] = useState([{day: null, actions: null, money: null, notes: null}]);\r\n    const [loading, setLoading] = useState(false);\r\n    const ref_saving = useRef();\r\n    let [count_total, set_count_total] = useState(0);\r\n\r\n    function fnColHeaders(col) {\r\n        switch (col) {\r\n            case 0:\r\n                return t('text.txt_day');\r\n            case 1:\r\n                return t('text.txt_Todo');\r\n            case 2:\r\n                return t('text.txt_Money');\r\n            case 3:\r\n                return t('text.txt_notes');\r\n        }\r\n    }\r\n\r\n    const hotSetting = {\r\n        ref: ref_saving,\r\n        data: dataHandsome,\r\n        rowHeaders: true,\r\n        rowHeights: 34,\r\n        height: 370,\r\n        minRows: 10,\r\n        //maxCols: 3,\r\n        minSpareRows: 1,\r\n        stretchH: \"all\",\r\n        manualRowResize: false,\r\n        manualColumnResize: false,\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        contextMenu: true,\r\n        fixedRowsBottom: 0,\r\n        column: [\r\n            {data: 'day'},\r\n            {data: 'actions'},\r\n            {data: 'money'},\r\n            {data: 'notes'}\r\n        ],\r\n        cells: function (row, col, prop) {\r\n            const cellProperties = {};\r\n            if (prop === 'day') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.type = \"date\";\r\n                    cellProperties.dateFormat = 'DD/MM/YYYY';\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.DateRenderer.apply(this, arguments);\r\n                }\r\n            } else if (prop === 'actions') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.className = 'htLeft htMiddle';\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'money') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    if (value >= 100000) {\r\n                        td.style.color = colorOptions.saving;\r\n                    }\r\n                    if (value >= 1000000) {\r\n                        td.style.fontWeight = \"bold\";\r\n                        td.style.color = colorOptions.saving;\r\n                    }\r\n\r\n                    cellProperties.type = \"numeric\";\r\n                    cellProperties.numericFormat = {\r\n                        pattern: \"0,0 VNĐ\"\r\n                    }\r\n                    cellProperties.readOnly = false;\r\n                    cellProperties.className = 'htRight htMiddle';\r\n                    Handsontable.renderers.NumericRenderer.apply(this, arguments);\r\n                }\r\n            } else if (prop === 'notes') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.className = 'htLeft';\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                };\r\n            }\r\n            return cellProperties;\r\n        },\r\n        beforeChange: (source, changes) => {\r\n            if (source === \"loadData\") {\r\n                return;\r\n            }\r\n            let row = source[0][0], columns = source[0][1], newValues = source[0][3];\r\n            switch (columns) {\r\n                case 'money':\r\n                    if (!Number(newValues)) {\r\n                        if (newValues !== null) {\r\n                            return false;\r\n                        }\r\n                        const actions = ref_saving.current.hotInstance.getDataAtRowProp(row, 'actions');\r\n                        if (actions === null) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'actions':\r\n                    if (newValues){\r\n                        if (newValues.length > 50) {\r\n                            message.error('dữ liệu không được quá 50 ký tự');\r\n                            return false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'notes':\r\n                    if (newValues){\r\n                        if (newValues.length > 50) {\r\n                            message.error('ghi chú không được quá 50 ký tự');\r\n                            return false;\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n            }\r\n        },\r\n        afterChange: (source, changes) => {\r\n            fnAfterChange(changes, source)\r\n        },\r\n        afterInit: function () {\r\n            if (ref_saving) {\r\n                if (ref_saving.current !== null) {\r\n                    setTimeout(() => {\r\n                        ref_saving.current.hotInstance.render();\r\n                    }, 200);\r\n\r\n                }\r\n            }\r\n        },\r\n        afterSelectionEnd: function (r, c, r2, c2) {\r\n            if (isMobile) {\r\n                if (this.getActiveEditor()) {\r\n                    this.getActiveEditor().enableFullEditMode();\r\n                    this.getActiveEditor().beginEditing();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function fnAfterChange(changes, source) {\r\n        if (!source) {\r\n            return;\r\n        }\r\n        source.forEach(function (change) {\r\n            const toDay = Moment().format('DD/MM/YYYY');\r\n            const row = change[0], col = change[1], newVal = change[3];\r\n            const days = ref_saving.current.hotInstance.getDataAtRowProp(row, 'day');\r\n            switch (col) {\r\n                case \"actions\":\r\n                    if (newVal) {\r\n                        if (!days) {\r\n                            ref_saving.current.hotInstance.setDataAtRowProp(row, 'day', toDay, \"source\");\r\n                        }\r\n                    } else {\r\n                        ref_saving.current.hotInstance.setDataAtRowProp(row, 'day', null, \"source\");\r\n                    }\r\n                    break;\r\n                case 'day':\r\n                    if (!Moment(new Date(newVal)).isValid()) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                case 'money':\r\n                    const object_saving = ref_saving.current.hotInstance.getSourceData();\r\n                    let total_money = 0;\r\n                    if (object_saving.length > 0) {\r\n                        object_saving.map((value, i) => {\r\n                            if (Number(value.money)) {\r\n                                total_money += parseInt(value.money);\r\n                            }\r\n                        });\r\n                    }\r\n                    set_count_total(total_money);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ref_saving) {\r\n            if (ref_saving.current !== null) {\r\n                setTimeout(() => {\r\n                    ref_saving.current.hotInstance.render();\r\n                }, 0);\r\n\r\n            }\r\n        }\r\n    }, [props.activeKey]);\r\n\r\n    async function fn_save_saving() {\r\n        setLoading(true);\r\n        let DataObject = [];\r\n        dataHandsome.map((value, i) => {\r\n            if (value.money > 0 && value.day && value.actions) {\r\n                value.money = value.money.toString();\r\n                DataObject.push(value);\r\n            }\r\n        });\r\n        if (DataObject.length > 0) {\r\n            return await props\r\n                .dispatch(saving_actions.saving_insert(DataObject))\r\n                .then(response => {\r\n                    setLoading(false);\r\n                    if (response.type === saving_constants.SAVING_INSERT_FAIL) {\r\n                        message.error(response.error);\r\n                    } else {\r\n                        message.success(t('notification.notification_success'));\r\n                        const dataEmpty = [{day: null, actions: null, money: null, notes: null}]\r\n                        setDataHandsome(dataEmpty);\r\n                        set_count_total(0);\r\n                    }\r\n                    return response;\r\n                });\r\n        } else {\r\n            message.error(t('notification.notification_empty'));\r\n            setLoading(false);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function functionPassed() {\r\n        fn_save_saving().then(response => {\r\n            if (response) {\r\n                (async function fnc() {\r\n                    await props.prepare_callback();\r\n                })();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={props.classNameHot}>\r\n            <Spin size=\"default\" tip={\"Running\"} spinning={loading} indicator={antIcon} delay={500}>\r\n                <HotTable colHeaders={fnColHeaders} style={{zIndex: 0}} ref={ref_saving} settings={hotSetting}/>\r\n            </Spin>\r\n            <br/>\r\n            <Row>\r\n                <Col span={12} style={{textAlign: 'center'}}>\r\n                    <Space\r\n                        direction=\"vertical\"\r\n                        size=\"middle\"\r\n                        style={{\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <Badge.Ribbon text={t('saving.name')} color={colorOptions.saving}>\r\n                            <Card headStyle={{fontWeight: '700'}} title={t('text.txt_total')} size=\"small\">\r\n                                <Title style={{color: colorOptions.saving}} level={2}>\r\n                                    {`${count_total}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            </Card>\r\n                        </Badge.Ribbon>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={12} style={{textAlign: 'right'}}>\r\n                    <Space direction=\"vertical\">\r\n                        <Space wrap>\r\n                            <Button style={{backgroundColor: colorOptions.saving}} type=\"primary\" icon={<SaveFilled/>}\r\n                                    loading={loading}\r\n                                    onClick={() => functionPassed()}>\r\n                                {t('button.btn_Save')}\r\n                            </Button>\r\n                        </Space>\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nSavingComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {authentication} = state;\r\n    return {\r\n        authentication\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(SavingComponent));\r\n\r\n","import React, {createRef, useEffect, useRef, useState} from \"react\";\r\nimport moment from 'moment';\r\nimport Handsontable from \"handsontable\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DownloadOutlined,\r\n    LoadingOutlined,\r\n    SearchOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Card,\r\n    Typography,\r\n    Col,\r\n    Row,\r\n    Badge,\r\n    Spin,\r\n    Popconfirm,\r\n    message,\r\n    DatePicker,\r\n    Space, Input\r\n} from \"antd\";\r\nimport {translate} from \"react-switch-lang\";\r\nimport {HotTable} from \"@handsontable/react\";\r\n\r\nimport {saving_history_actions} from \"../../actions\";\r\nimport {saving_history_constants} from \"../../constants\";\r\nimport {groupBy, remove_duplicates_es6} from \"../../helpers/helpers\";\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\n\r\nconst {RangePicker} = DatePicker;\r\nconst {Title} = Typography;\r\nconst antIcon = (\r\n    <LoadingOutlined\r\n        style={{\r\n            fontSize: 24,\r\n        }}\r\n        spin\r\n    />\r\n);\r\n\r\nconst SavingHistoryComponent = (props) => {\r\n    const {t} = props;\r\n    const [data_saving_history, set_data_saving_history] = useState([{\r\n        day: null,\r\n        actions: null,\r\n        money: null,\r\n        id: null\r\n    }]);\r\n    const [loading, is_loading] = useState(false);\r\n    const [isChecked, set_isChecked] = useState(false);\r\n    const [is_has_data, set_is_has_data] = useState(false);\r\n    let [list_checked_id, set_list_checked_id] = useState([]);\r\n    const [count_total, set_count_total] = useState(0);\r\n    const [firstDay, set_firstDay] = useState(moment().startOf(\"month\"));\r\n    const [lastDay, set_lastDay] = useState(moment().endOf(\"month\"));\r\n    const [data_merge_Cells, set_data_merge_Cells] = useState([]);\r\n    const ref_saving_history = useRef();\r\n    const [input_text, set_input_text] = useState('');\r\n\r\n    function fnColHeaders(col) {\r\n        switch (col) {\r\n            case 0:\r\n                return t('text.txt_day');\r\n            case 1:\r\n                return t('text.txt_Todo');\r\n            case 2:\r\n                return t('text.txt_Money');\r\n            case 3:\r\n                return t('text.txt_action');\r\n        }\r\n    }\r\n\r\n    const fnOnchangeCheckBoxSelectAll = (e) => {\r\n        set_isChecked(e.target.checked);\r\n        if (!e.target.checked) {\r\n            set_list_checked_id([]);\r\n        }\r\n        let array_id = [];\r\n        const dataObject = data_saving_history.map(item => {\r\n                if (item) {\r\n                    if (item.id !== null) {\r\n                        if (e.target.checked) {\r\n                            array_id.push(item.id);\r\n                        }\r\n                        return {\r\n                            ...item, available: e.target.checked\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        const arrValue = remove_duplicates_es6(array_id);\r\n        set_list_checked_id(arrValue);\r\n        set_data_saving_history(dataObject);\r\n    };\r\n\r\n    const hotSetting_saving_history = {\r\n        ref: ref_saving_history,\r\n        data: data_saving_history,\r\n        rowHeaders: true,\r\n        rowHeights: 34,\r\n        height: 370,\r\n        minRows: 10,\r\n        minSpareRows: 0,\r\n        maxCols: 4,\r\n        stretchH: \"all\",\r\n        manualRowResize: false,\r\n        manualColumnResize: true,\r\n        contextMenu: false,\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        mergeCells: data_merge_Cells,\r\n        fixedRowsBottom: 0,\r\n        comments: true,\r\n        column: [\r\n            {\r\n                data: 'day',\r\n                type: \"date\",\r\n                dateFormat: \"DD/MM/YYYY\",\r\n                correctFormat: true,\r\n            },\r\n            {\r\n                data: \"actions\",\r\n                type: \"text\"\r\n            },\r\n            {\r\n                data: 'money'\r\n            },\r\n            {\r\n                data: \"available\",\r\n                type: \"checkbox\",\r\n                checkedTemplate: 1,\r\n                uncheckedTemplate: 0\r\n            }\r\n        ],\r\n        cells: function (row, col, prop) {\r\n            const cellProperties = {};\r\n            const totalRows = this.instance.countRows();\r\n\r\n            if (prop === 'day') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.type = \"date\";\r\n                    cellProperties.dateFormat = 'DD/MM/YYYY';\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    Handsontable.renderers.DateRenderer.apply(this, arguments);\r\n                }\r\n            } else if (prop === 'actions') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    const notes = instance.getDataAtRowProp(row, 'notes');\r\n                    if (notes !== null) {\r\n                        cellProperties.comment = {value: notes, readOnly: true};\r\n                    }\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htMiddle\";\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'money') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    if (value > 100000) {\r\n                        td.style.color = colorOptions.saving;\r\n                    }\r\n                    if (value >= 1000000) {\r\n                        td.style.fontWeight = \"bold\";\r\n                        td.style.color = colorOptions.saving;\r\n                    }\r\n                    cellProperties.type = \"numeric\";\r\n                    cellProperties.numericFormat = {\r\n                        pattern: \"0,0 VNĐ\"\r\n                    }\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htRight htMiddle\";\r\n                    Handsontable.renderers.NumericRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'available') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    td.style.textAlign = 'center';\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    cellProperties.readOnly = true;\r\n                    const id = instance.getDataAtRowProp(row, 'id');\r\n                    if (id !== null) {\r\n                        Handsontable.renderers.CheckboxRenderer.apply(this, arguments);\r\n                    } else {\r\n                        Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                    }\r\n                };\r\n            }\r\n\r\n            return cellProperties;\r\n        },\r\n        afterChange: function (change, source) {\r\n            if (source !== 'loadData' && source !== 'afterChange') {\r\n                change.forEach(function (changes) {\r\n                    const row = changes[0], col = changes[1], newVal = changes[3];\r\n                    const id = ref_saving_history.current.hotInstance.getDataAtRowProp(row, 'id');\r\n                    if (col === \"available\") {\r\n                        if (newVal) {\r\n                            set_list_checked_id(value => [...value, id]);\r\n                        } else {\r\n                            const array_value = list_checked_id.filter(function (item) {\r\n                                return item !== id;\r\n                            });\r\n                            set_list_checked_id(array_value);\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n        },\r\n        afterInit: function () {\r\n            if (ref_saving_history) {\r\n                if (ref_saving_history.current !== null) {\r\n                    setTimeout(() => {\r\n                        ref_saving_history.current.hotInstance.render();\r\n                    }, 200);\r\n\r\n                }\r\n            }\r\n        },\r\n        afterOnCellMouseDown: function (event, coords, TD) {\r\n            // kiểm tra nếu coords === 3 là cột checkbox\r\n            if (coords) {\r\n                if (coords.col === 3) {\r\n                    if (coords.row !== -1) {\r\n                        const id = ref_saving_history.current.hotInstance.getDataAtRowProp(coords.row, 'id');\r\n                        if (id > 0) {\r\n                            const isCheck = ref_saving_history.current.hotInstance.getDataAtCell(coords.row, coords.col);\r\n                            ref_saving_history.current.hotInstance.setDataAtRowProp(coords.row, 'available', !isCheck, \"source\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        afterSelection: function (row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n        }\r\n    }\r\n\r\n    function cancel() {\r\n\r\n    }\r\n\r\n    async function confirm() {\r\n        // kiểm tra list id có dữ liệu không, nếu có thì thực hiện xóa\r\n        if (list_checked_id.length > 0) {\r\n            is_loading(true);\r\n            await props\r\n                .dispatch(saving_history_actions.saving_history_delete(list_checked_id))\r\n                .then(response => {\r\n                    if (response.type === saving_history_constants.SAVING_HISTORY_DELETE_SUCCESS) {\r\n                        message.success(t('notification.notification_remove_success'));\r\n                        set_list_checked_id([]);\r\n                        setTimeout(() => {\r\n                            fn_search_saving_history().then(r => {\r\n                                (async function fnc() {\r\n                                    await props.prepare_callback();\r\n                                })();\r\n                            });\r\n                        }, 1000);\r\n                    } else {\r\n                        message.error(t('notification.notification_remove_failed'));\r\n                    }\r\n                    is_loading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fn_search_saving_history(firstDay, lastDay).then(r => {\r\n            });\r\n        }, 1000);\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (ref_saving_history) {\r\n            if (ref_saving_history.current !== null) {\r\n                setTimeout(() => {\r\n                    ref_saving_history.current.hotInstance.render();\r\n                }, 100);\r\n\r\n            }\r\n        }\r\n    }, [props.activeKey]);\r\n\r\n\r\n    useEffect(() => {\r\n        // Kiểm tra nếu có check từ 1 dòng trở lên thì hiển thị nút xóa\r\n\r\n        if (list_checked_id.length > 0) {\r\n            set_isChecked(true);\r\n        } else {\r\n            // Ngược lại thì ẩn nút xóa\r\n            set_isChecked(false);\r\n        }\r\n    }, [list_checked_id]);\r\n\r\n    async function fn_search_saving_history() {\r\n        is_loading(true);\r\n        let firstDay_ = moment(firstDay);\r\n        let lastDay_ = moment(lastDay);\r\n\r\n        if (firstDay_._isValid) {\r\n            firstDay_ = firstDay_.format(\"DD-MM-YYYY\");\r\n        } else {\r\n            firstDay_ = '';\r\n        }\r\n\r\n        if (lastDay_._isValid) {\r\n            lastDay_ = lastDay_.format(\"DD-MM-YYYY\");\r\n        } else {\r\n            lastDay_ = '';\r\n        }\r\n        await props.dispatch(saving_history_actions.saving_history_get(firstDay_, lastDay_, input_text)).then(response => {\r\n            if (response.type === saving_history_constants.SAVING_HISTORY_GET_SUCCESS) {\r\n                if (response.data.length > 0) {\r\n                    response.data.map((val, i) => {\r\n                        val.day = moment(new Date(val.day)).format(\"DD/MM/YYYY\");\r\n                        val.money = parseInt(val.money);\r\n                    });\r\n\r\n                    groupBy(response.data, function (car) {\r\n                        return car.day;\r\n                    }).then((data, a) => {\r\n                        let ii = 0, array = [], numIndex = 0;\r\n                        Object.keys(data).map(key => {\r\n                                const value = data[key];\r\n                                if (value.length > 1) {\r\n                                    array.push({\r\n                                        row: ii === 0 ? ii : numIndex,\r\n                                        col: 0,\r\n                                        rowspan: value.length,\r\n                                        colspan: 1\r\n                                    });\r\n                                }\r\n\r\n                                numIndex += value.length;\r\n                                ii++;\r\n                            }\r\n                        )\r\n\r\n                        const dataCallback = [];\r\n                        response.data.map((val, i) => {\r\n                            dataCallback.push({\r\n                                day: val.day,\r\n                                actions: val.actions,\r\n                                money: val.money,\r\n                                available: false,\r\n                                id: val.id,\r\n                                notes: val.notes,\r\n                            })\r\n                        });\r\n\r\n                        setTimeout(() => {\r\n                            is_loading(false);\r\n                            set_is_has_data(true);\r\n                            set_data_saving_history(dataCallback);\r\n                            set_data_merge_Cells(array);\r\n\r\n                            const countTotals = response.data.reduce((n, {money}) => n + Number(money), 0);\r\n                            if (countTotals > 0) {\r\n                                set_count_total(countTotals);\r\n                            }\r\n\r\n                            message.success(t('notification.notification_load_data_success'));\r\n                        }, 1000);\r\n\r\n                    });\r\n                } else {\r\n                    setTimeout(() => {\r\n                        is_loading(false);\r\n\r\n                        set_is_has_data(false);\r\n                        set_data_saving_history([{\r\n                            day: null,\r\n                            actions: null,\r\n                            money: null,\r\n                            id: null,\r\n                            notes: null,\r\n                        }]);\r\n\r\n                        set_count_total(0);\r\n                        message.warning(t('notification.notification_data_empty'));\r\n                    }, 1000);\r\n                }\r\n            } else {\r\n                message.error(response.error);\r\n                setTimeout(() => {\r\n                    is_loading(false);\r\n                }, 1000);\r\n            }\r\n        });\r\n    }\r\n\r\n    function fnSelectDatePicker(dates, dateStrings) {\r\n        const fromDays = dateStrings[0], toDays = dateStrings[1];\r\n        set_firstDay(fromDays);\r\n        set_lastDay(toDays);\r\n        // fn_search_saving_history(fromDays, toDays).then(r => {\r\n        // });\r\n    }\r\n\r\n    function fnOnChange(dates, dateStrings) {\r\n        const fromDays = dateStrings[0], toDays = dateStrings[1];\r\n        set_firstDay(fromDays);\r\n        set_lastDay(toDays);\r\n    }\r\n\r\n    function exports_saving() {\r\n        const hot = ref_saving_history.current.hotInstance;\r\n        const exportPlugin = hot.getPlugin('exportFile');\r\n        exportPlugin.downloadFile('csv', {\r\n            bom: true,\r\n            columnDelimiter: ',',\r\n            columnHeaders: true,\r\n            exportHiddenColumns: true,\r\n            exportHiddenRows: true,\r\n            fileExtension: 'csv',\r\n            filename: 'Handsontable-CSV-file_[YYYY]-[MM]-[DD]',\r\n            mimeType: 'text/csv;charset=utf-8',\r\n            rowDelimiter: '\\r\\n',\r\n            rowHeaders: true\r\n        });\r\n\r\n    }\r\n\r\n    function fn_input_onChange(e) {\r\n        set_input_text(e.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={props.classNameHot}>\r\n            <Spin size=\"default\" tip={t('text.txt_loading')} indicator={antIcon} spinning={loading}>\r\n                <Row justify=\"space-around\" align=\"middle\">\r\n                    <Col span={12} offset={3}>\r\n                        <RangePicker style={{width: '100%'}}\r\n                                     defaultValue={\r\n                                         [\r\n                                             moment(lastDay, 'DD-MM-YYYY'),\r\n                                             moment(firstDay, 'DD-MM-YYYY')\r\n                                         ]\r\n                                     }\r\n                                     onChange={fnOnChange}\r\n                                     onCalendarChange={fnSelectDatePicker}\r\n                                     dateRender={current => {\r\n                                         return (\r\n                                             <div className=\"ant-picker-cell-inner\" style={{fontSize: 13}}>\r\n                                                 {current.date()}\r\n                                             </div>\r\n                                         );\r\n                                     }}\r\n                        />\r\n                    </Col>\r\n                    <Col span={8} offset={1}>\r\n                        <Space wrap>\r\n                            {is_has_data && (\r\n                                <Checkbox onChange={fnOnchangeCheckBoxSelectAll}>\r\n                                    {t('text.txt_select_all')}\r\n                                </Checkbox>\r\n                            )}\r\n                            {isChecked && (\r\n                                <Popconfirm\r\n                                    title={t('button.btn_remove_title')}\r\n                                    onConfirm={confirm}\r\n                                    onCancel={cancel}\r\n                                    okText={t('button.btn_yes_txt')}\r\n                                    cancelText={t('button.btn_no_txt')}\r\n                                >\r\n                                    <Button type=\"primary\" danger> {t('button.btn_remove_text')} </Button>\r\n                                </Popconfirm>\r\n                            )}\r\n                        </Space>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <HotTable style={{zIndex: 0}}\r\n                          ref={ref_saving_history}\r\n                          settings={hotSetting_saving_history}\r\n                          colHeaders={fnColHeaders}\r\n                />\r\n                <br/>\r\n                <Row>\r\n                    <Col span={12} push={2}>\r\n                        <Input placeholder={t('input.input_search_text')} allowClear onChange={fn_input_onChange}/>\r\n                    </Col>\r\n                    <Col span={12} style={{textAlign: 'right'}}>\r\n                        <Space direction=\"vertical\">\r\n                            <Space wrap>\r\n                                <Button type=\"primary\"\r\n                                        style={{backgroundColor: colorOptions.saving}}\r\n                                        loading={loading}\r\n                                        icon={<SearchOutlined/>}\r\n                                        onClick={fn_search_saving_history}>\r\n                                    {t('button.btn_search')}\r\n                                </Button>\r\n                                <Button onClick={() => exports_saving()} disabled={loading} type=\"default\"\r\n                                        icon={<DownloadOutlined/>} size={'middle'}>\r\n                                    Tải xuống\r\n                                </Button>\r\n                            </Space>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row gutter={16} align={\"center\"}>\r\n                    <Col span={12} style={{textAlign: 'center'}}>\r\n                        <Badge.Ribbon text={t('saving.name')} color={colorOptions.saving}>\r\n                            <Card headStyle={{fontWeight: '700'}} title={t('text.txt_total')} size=\"small\">\r\n                                <Title style={{color: colorOptions.saving}} level={2}>\r\n                                    {`${count_total}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            </Card>\r\n                        </Badge.Ribbon>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nSavingHistoryComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {authentication} = state;\r\n    return {\r\n        authentication\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(SavingHistoryComponent));\r\n","import React, {createRef, useEffect, useRef, useState} from \"react\";\r\nimport {Button, Row, Spin, message, Skeleton, Col, Badge, Card, Space, Typography} from \"antd\";\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {translate} from 'react-switch-lang';\r\nimport {HotTable} from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport {isMobile} from 'react-device-detect';\r\nimport Moment from 'moment';\r\nimport {expense_actions} from \"../../actions\";\r\nimport {incomeConstants} from \"../../constants\";\r\nimport {LoadingOutlined, SaveFilled} from '@ant-design/icons';\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\nimport UploadFileComponent from \"../../helpers/upload_file\";\r\n\r\nconst {Title} = Typography;\r\nconst antIcon = (\r\n    <LoadingOutlined\r\n        style={{\r\n            fontSize: 24,\r\n        }}\r\n        spin\r\n    />\r\n);\r\n\r\nconst ExpenseComponent = (props) => {\r\n    const {t} = props;\r\n    const [dataHandsome, setDataHandsome] = useState([{\r\n        day: null,\r\n        actions: null,\r\n        money: null,\r\n        notes: null,\r\n        // attach: null\r\n    }]);\r\n    const [loading, setLoading] = useState(false);\r\n    const ref_expense = useRef(null);\r\n    let [count_total, set_count_total] = useState(0);\r\n\r\n    function fnColHeaders(col) {\r\n        switch (col) {\r\n            case 0:\r\n                return t('text.txt_day');\r\n            case 1:\r\n                return t('text.txt_Todo');\r\n            case 2:\r\n                return t('text.txt_Money');\r\n            case 3:\r\n                return t('text.txt_notes');\r\n            // case 4:\r\n            //     return t('text.txt_attach');\r\n        }\r\n    }\r\n\r\n    const hotSetting = {\r\n        ref: ref_expense,\r\n        data: dataHandsome,\r\n        rowHeaders: true,\r\n        rowHeights: 34,\r\n        height: 370,\r\n        minRows: 10,\r\n        //maxCols: 3,\r\n        minSpareRows: 1,\r\n        stretchH: \"all\",\r\n        manualRowResize: true,\r\n        manualColumnResize: true,\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        contextMenu: false,\r\n        fixedRowsBottom: 0,\r\n        column: [\r\n            {data: 'day'},\r\n            {data: 'actions'},\r\n            {data: 'money'},\r\n            {data: 'notes'},\r\n            // {data: 'attach'}\r\n        ],\r\n        cells: function (row, col, prop) {\r\n            const cellProperties = {};\r\n            if (prop === 'day') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.type = \"date\";\r\n                    cellProperties.dateFormat = 'DD/MM/YYYY';\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.DateRenderer.apply(this, arguments);\r\n                }\r\n            } else if (prop === 'actions') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.className = 'htLeft htMiddle';\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'money') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    if (value >= 100000) {\r\n                        td.style.color = colorOptions.expense;\r\n                    }\r\n                    if (value >= 1000000) {\r\n                        td.style.fontWeight = \"bold\";\r\n                        td.style.color = colorOptions.expense;\r\n                    }\r\n\r\n                    cellProperties.type = \"numeric\";\r\n                    cellProperties.numericFormat = {\r\n                        pattern: \"0,0 VNĐ\"\r\n                    }\r\n                    cellProperties.readOnly = false;\r\n                    cellProperties.className = 'htRight htMiddle';\r\n                    Handsontable.renderers.NumericRenderer.apply(this, arguments);\r\n                }\r\n            } else if (prop === 'notes') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.className = 'htLeft htMiddle';\r\n                    cellProperties.readOnly = false;\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                }\r\n            }\r\n            // else if (prop === 'attach') {\r\n            //     cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n            //         const childNodes = td.children;\r\n            //         const actions = instance.getDataAtRowProp(row, 'actions');\r\n            //         if (actions !== null) {\r\n            //             if (!childNodes.item(0)) {\r\n            //                 const dom = document.createElement('div');\r\n            //                 ReactDOM.render(<UploadFileComponent/>, dom);\r\n            //                 td.innerHTML = '';\r\n            //                 td.appendChild(dom);\r\n            //             }\r\n            //         }\r\n            //         cellProperties.className = 'htCenter';\r\n            //         cellProperties.readOnly = true;\r\n            //     };\r\n            // }\r\n\r\n            return cellProperties;\r\n        },\r\n        beforeChange: (source, changes) => {\r\n            if (source === \"loadData\") {\r\n                return;\r\n            }\r\n            let row = source[0][0], columns = source[0][1], newValues = source[0][3];\r\n            switch (columns) {\r\n                case 'money':\r\n                    if (!Number(newValues)) {\r\n                        if (newValues !== null) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    const actions = ref_expense.current.hotInstance.getDataAtRowProp(row, 'actions');\r\n                    if (actions === null) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                case 'actions':\r\n                    if (newValues) {\r\n                        if (newValues.length > 50) {\r\n                            message.error('dữ liệu không được quá 50 ký tự');\r\n                            return false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'notes':\r\n                    if (newValues) {\r\n                        if (newValues.length > 50) {\r\n                            message.error('ghi chú không được quá 50 ký tự');\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                default:\r\n            }\r\n        },\r\n        afterChange: (source, changes) => {\r\n            fnAfterChange(changes, source)\r\n        },\r\n        afterInit: function () {\r\n            if (ref_expense) {\r\n                if (ref_expense.current !== null) {\r\n                    setTimeout(() => {\r\n                        ref_expense.current.hotInstance.render();\r\n                    }, 200);\r\n\r\n                }\r\n            }\r\n        },\r\n        afterSelectionEnd: function (r, c, r2, c2) {\r\n            if (isMobile) {\r\n                if (this.getActiveEditor()) {\r\n                    this.getActiveEditor().enableFullEditMode();\r\n                    this.getActiveEditor().beginEditing();\r\n                }\r\n            }\r\n        },\r\n        beforeKeyDown: (event) => {\r\n\r\n        }\r\n    }\r\n\r\n    function fnAfterChange(changes, source) {\r\n        if (!source) {\r\n            return;\r\n        }\r\n        source.forEach(function (change) {\r\n            const toDay = Moment().format('DD/MM/YYYY');\r\n            const row = change[0], col = change[1], newVal = change[3];\r\n            const days = ref_expense.current.hotInstance.getDataAtRowProp(row, 'day');\r\n            switch (col) {\r\n                case \"actions\":\r\n                    if (newVal) {\r\n                        if (!days) {\r\n                            ref_expense.current.hotInstance.setDataAtRowProp(row, 'day', toDay, \"source\");\r\n                        }\r\n                    } else {\r\n                        ref_expense.current.hotInstance.setDataAtRowProp(row, 'day', null, \"source\");\r\n                    }\r\n                    break;\r\n                case 'day':\r\n                    if (!Moment(new Date(newVal)).isValid()) {\r\n                        return false;\r\n                    }\r\n                    break;\r\n                case 'money':\r\n                    const object_expense = ref_expense.current.hotInstance.getSourceData();\r\n                    let total_money = 0;\r\n                    if (object_expense.length > 0) {\r\n                        object_expense.map((value, i) => {\r\n                            if (Number(value.money)) {\r\n                                total_money += parseInt(value.money);\r\n                            }\r\n                        });\r\n                    }\r\n                    set_count_total(total_money);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ref_expense) {\r\n            if (ref_expense.current !== null) {\r\n                setTimeout(() => {\r\n                    ref_expense.current.hotInstance.render();\r\n                }, 0);\r\n\r\n            }\r\n        }\r\n    }, [props.activeKey]);\r\n\r\n    async function fn_save_expense() {\r\n        setLoading(true);\r\n        let DataObject = [];\r\n        dataHandsome.map((value, i) => {\r\n            if (value.money > 0 && value.day && value.actions) {\r\n                value.money = value.money.toString();\r\n                DataObject.push(value);\r\n            }\r\n        });\r\n        if (DataObject.length > 0) {\r\n            return await props\r\n                .dispatch(expense_actions.expense_insert(DataObject))\r\n                .then(response => {\r\n                    setLoading(false);\r\n                    if (response.type === incomeConstants.INCOME_INSERT_FAIL) {\r\n                        message.error(response.error);\r\n                    } else {\r\n                        message.success(t('notification.notification_success'));\r\n                        const dataEmpty = [{day: null, actions: null, money: null, notes: null}]\r\n                        setDataHandsome(dataEmpty);\r\n                        set_count_total(0);\r\n                    }\r\n                    return response;\r\n                });\r\n        } else {\r\n            message.error(t('notification.notification_empty'));\r\n            setLoading(false);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function functionPassed() {\r\n        fn_save_expense().then(response => {\r\n            if (response) {\r\n                (async function fnc() {\r\n                    await props.prepare_callback();\r\n                })();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={props.classNameHot}>\r\n            <Spin size=\"default\" tip={\"Running\"} spinning={loading} indicator={antIcon} delay={500}>\r\n                <HotTable colHeaders={fnColHeaders} style={{zIndex: 0}} ref={ref_expense} settings={hotSetting}/>\r\n            </Spin>\r\n            <br/>\r\n            <Row>\r\n                <Col span={12} style={{textAlign: 'center'}}>\r\n                    <Space\r\n                        direction=\"vertical\"\r\n                        size=\"middle\"\r\n                        style={{\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <Badge.Ribbon text={t('expense.name')} color={colorOptions.expense}>\r\n                            <Card headStyle={{fontWeight: '700'}} title={t('text.txt_total')} size=\"small\">\r\n                                <Title style={{color: colorOptions.expense}} level={2}>\r\n                                    {`${count_total}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            </Card>\r\n                        </Badge.Ribbon>\r\n                    </Space>\r\n                </Col>\r\n                <Col span={12} style={{textAlign: 'right'}}>\r\n                    <Space direction=\"vertical\">\r\n                        <Space wrap>\r\n                            <Button type=\"primary\"\r\n                                    danger\r\n                                    icon={<SaveFilled/>}\r\n                                    loading={loading}\r\n                                    onClick={() => functionPassed()}\r\n                            >\r\n                                {t('button.btn_Save')}\r\n                            </Button>\r\n                        </Space>\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nExpenseComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {authentication} = state;\r\n    return {\r\n        authentication\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(ExpenseComponent));\r\n","import React, {createRef, useEffect, useRef, useState} from \"react\";\r\nimport moment from 'moment';\r\nimport Handsontable from \"handsontable\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DownloadOutlined,\r\n    LoadingOutlined,\r\n    SearchOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Card,\r\n    Typography,\r\n    Col,\r\n    Row,\r\n    Badge,\r\n    Spin,\r\n    Popconfirm,\r\n    message,\r\n    DatePicker,\r\n    Space,\r\n    Input\r\n} from \"antd\";\r\nimport {translate} from \"react-switch-lang\";\r\nimport {HotTable} from \"@handsontable/react\";\r\n\r\nimport {expense_history_actions} from \"../../actions\";\r\nimport {expense_history_constants} from \"../../constants\";\r\nimport {groupBy, remove_duplicates_es6} from \"../../helpers/helpers\";\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\n\r\nconst {RangePicker} = DatePicker;\r\nconst {Title} = Typography;\r\nconst antIcon = (\r\n    <LoadingOutlined\r\n        style={{\r\n            fontSize: 24,\r\n        }}\r\n        spin\r\n    />\r\n);\r\n\r\nconst ExpenseHistoryComponent = (props) => {\r\n    const {t} = props;\r\n    const [data_expense_history, set_data_expense_history] = useState([{\r\n        day: null,\r\n        actions: null,\r\n        money: null,\r\n        id: null,\r\n    }]);\r\n    const [loading, is_loading] = useState(false);\r\n    const [isChecked, set_isChecked] = useState(false);\r\n    const [is_has_data, set_is_has_data] = useState(false);\r\n    let [list_checked_id, set_list_checked_id] = useState([]);\r\n    let [count_total, set_count_total] = useState(0);\r\n    const [firstDay, set_firstDay] = useState(moment().startOf(\"month\"));\r\n    const [lastDay, set_lastDay] = useState(moment().endOf(\"month\"));\r\n    const [data_merge_Cells, set_data_merge_Cells] = useState([]);\r\n    const ref_expense_history = useRef();\r\n    const [input_text, set_input_text] = useState('');\r\n\r\n    function fnColHeaders(col) {\r\n        switch (col) {\r\n            case 0:\r\n                return t('text.txt_day');\r\n            case 1:\r\n                return t('text.txt_Todo');\r\n            case 2:\r\n                return t('text.txt_Money');\r\n            case 3:\r\n                return t('text.txt_action');\r\n        }\r\n    }\r\n\r\n    const fnOnchangeCheckBoxSelectAll = (e) => {\r\n        set_isChecked(e.target.checked);\r\n        if (!e.target.checked) {\r\n            set_list_checked_id([]);\r\n        }\r\n        let array_id = [];\r\n        const dataObject = data_expense_history.map(item => {\r\n                if (item) {\r\n                    if (item.id !== null) {\r\n                        if (e.target.checked) {\r\n                            array_id.push(item.id);\r\n                        }\r\n                        return {\r\n                            ...item, available: e.target.checked\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        const arrValue = remove_duplicates_es6(array_id);\r\n        set_list_checked_id(arrValue);\r\n        set_data_expense_history(dataObject);\r\n    };\r\n\r\n    const hotSetting_expense_history = {\r\n        ref: ref_expense_history,\r\n        data: data_expense_history,\r\n        rowHeaders: true,\r\n        rowHeights: 34,\r\n        height: 370,\r\n        minRows: 10,\r\n        minSpareRows: 0,\r\n        maxCols: 4,\r\n        stretchH: \"all\",\r\n        manualRowResize: false,\r\n        manualColumnResize: true,\r\n        contextMenu: false,\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        mergeCells: data_merge_Cells,\r\n        fixedRowsBottom: 0,\r\n        comments: true,\r\n        column: [\r\n            {\r\n                data: 'day',\r\n                type: \"date\",\r\n                dateFormat: \"DD/MM/YYYY\",\r\n                correctFormat: true,\r\n            },\r\n            {\r\n                data: \"actions\",\r\n                type: \"text\"\r\n            },\r\n            {\r\n                data: 'money'\r\n            },\r\n            {\r\n                data: \"available\",\r\n                type: \"checkbox\",\r\n                checkedTemplate: 1,\r\n                uncheckedTemplate: 0\r\n            }\r\n        ],\r\n        cells: function (row, col, prop) {\r\n            const cellProperties = {};\r\n            if (prop === 'day') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    cellProperties.type = \"date\";\r\n                    cellProperties.dateFormat = 'DD/MM/YYYY';\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    Handsontable.renderers.DateRenderer.apply(this, arguments);\r\n                }\r\n            } else if (prop === 'actions') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    const notes = instance.getDataAtRowProp(row, 'notes');\r\n                    if (notes !== null) {\r\n                        cellProperties.comment = {value: notes, readOnly: true};\r\n                    }\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htMiddle\";\r\n                    Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'money') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    if (value > 100000) {\r\n                        td.style.color = \"red\";\r\n                    }\r\n                    if (value >= 1000000) {\r\n                        td.style.fontWeight = \"bold\";\r\n                        td.style.color = \"red\";\r\n                    }\r\n                    cellProperties.type = \"numeric\";\r\n                    cellProperties.numericFormat = {\r\n                        pattern: \"0,0 VNĐ\"\r\n                    }\r\n                    cellProperties.readOnly = true;\r\n                    cellProperties.className = \"htRight htMiddle\";\r\n                    Handsontable.renderers.NumericRenderer.apply(this, arguments);\r\n                };\r\n            } else if (prop === 'available') {\r\n                cellProperties.renderer = function (instance, td, row, col, prop, value, cellProperties) {\r\n                    td.style.textAlign = 'center';\r\n                    cellProperties.className = \"htCenter htMiddle\";\r\n                    cellProperties.readOnly = true;\r\n                    const id = instance.getDataAtRowProp(row, 'id');\r\n                    if (id !== null) {\r\n                        Handsontable.renderers.CheckboxRenderer.apply(this, arguments);\r\n                    } else {\r\n                        Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n                    }\r\n                };\r\n            }\r\n\r\n            return cellProperties;\r\n        },\r\n        afterChange: function (change, source) {\r\n            if (source !== 'loadData' && source !== 'afterChange') {\r\n                change.forEach(function (changes) {\r\n                    const row = changes[0], col = changes[1], newVal = changes[3];\r\n                    const id = ref_expense_history.current.hotInstance.getDataAtRowProp(row, 'id');\r\n                    if (col === \"available\") {\r\n                        if (newVal) {\r\n                            set_list_checked_id(value => [...value, id]);\r\n                        } else {\r\n                            const array_value = list_checked_id.filter(function (item) {\r\n                                return item !== id;\r\n                            });\r\n                            set_list_checked_id(array_value);\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n        },\r\n        afterInit: function () {\r\n            if (ref_expense_history) {\r\n                if (ref_expense_history.current !== null) {\r\n                    setTimeout(() => {\r\n                        ref_expense_history.current.hotInstance.render();\r\n                    }, 200);\r\n\r\n                }\r\n            }\r\n        },\r\n        afterOnCellMouseDown: function (event, coords, TD) {\r\n            // kiểm tra nếu coords === 3 là cột checkbox\r\n            if (coords) {\r\n                if (coords.col === 3) {\r\n                    if (coords.row !== -1) {\r\n                        const id = ref_expense_history.current.hotInstance.getDataAtRowProp(coords.row, 'id');\r\n                        if (id > 0) {\r\n                            const isCheck = ref_expense_history.current.hotInstance.getDataAtCell(coords.row, coords.col);\r\n                            ref_expense_history.current.hotInstance.setDataAtRowProp(coords.row, 'available', !isCheck, \"source\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        afterSelection: function (row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n        }\r\n    }\r\n\r\n    function cancel() {\r\n\r\n    }\r\n\r\n    async function confirm() {\r\n        // kiểm tra list id có dữ liệu không, nếu có thì thực hiện xóa\r\n        if (list_checked_id.length > 0) {\r\n            is_loading(true);\r\n            await props\r\n                .dispatch(expense_history_actions.fn_expense_remove_history(list_checked_id))\r\n                .then(response => {\r\n                    if (response.type === expense_history_constants.EXPENSE_HISTORY_REMOVE_SUCCESS) {\r\n                        message.success(t('notification.notification_remove_success'));\r\n                        set_list_checked_id([]);\r\n                        setTimeout(() => {\r\n                            fn_search_expense_history().then(r => {\r\n                                (async function fnc() {\r\n                                    await props.prepare_callback();\r\n                                })();\r\n                            });\r\n                        }, 1000);\r\n                    } else {\r\n                        message.error(t('notification.notification_remove_failed'));\r\n                    }\r\n                    is_loading(false);\r\n                }).catch((error) => {\r\n                    console.log(error)\r\n                });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fn_search_expense_history().then(r => {\r\n            });\r\n        }, 1000);\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (ref_expense_history) {\r\n            if (ref_expense_history.current !== null) {\r\n                setTimeout(() => {\r\n                    ref_expense_history.current.hotInstance.render();\r\n                }, 100);\r\n\r\n            }\r\n        }\r\n    }, [props.activeKey]);\r\n\r\n    useEffect(() => {\r\n        // Kiểm tra nếu có check từ 1 dòng trở lên thì hiển thị nút xóa\r\n\r\n        if (list_checked_id.length > 0) {\r\n            set_isChecked(true);\r\n        } else {\r\n            // Ngược lại thì ẩn nút xóa\r\n            set_isChecked(false);\r\n        }\r\n    }, [list_checked_id]);\r\n\r\n    async function fn_search_expense_history() {\r\n        is_loading(true);\r\n        let firstDay_ = moment(firstDay);\r\n        let lastDay_ = moment(lastDay);\r\n\r\n        if (firstDay_._isValid) {\r\n            firstDay_ = firstDay_.format(\"DD-MM-YYYY\");\r\n        } else {\r\n            firstDay_ = '';\r\n        }\r\n\r\n        if (lastDay_._isValid) {\r\n            lastDay_ = lastDay_.format(\"DD-MM-YYYY\");\r\n        } else {\r\n            lastDay_ = '';\r\n        }\r\n\r\n        await props.dispatch(expense_history_actions.expense_get_history(firstDay_, lastDay_, input_text)).then(response => {\r\n            if (response.type === expense_history_constants.EXPENSE_HISTORY_GET_SUCCESS) {\r\n                if (response.data.length > 0) {\r\n                    response.data.map((val, i) => {\r\n                        val.day = moment(new Date(val.day)).format(\"DD/MM/YYYY\");\r\n                        val.money = parseInt(val.money);\r\n                    });\r\n\r\n                    groupBy(response.data, function (car) {\r\n                        return car.day;\r\n                    }).then((data, a) => {\r\n                        let ii = 0, array = [], numIndex = 0;\r\n                        Object.keys(data).map(key => {\r\n                                const value = data[key];\r\n                                if (value.length > 1) {\r\n                                    array.push({\r\n                                        row: ii === 0 ? ii : numIndex,\r\n                                        col: 0,\r\n                                        rowspan: value.length,\r\n                                        colspan: 1\r\n                                    });\r\n                                }\r\n\r\n                                numIndex += value.length;\r\n                                ii++;\r\n                            }\r\n                        )\r\n\r\n                        const dataCallback = [];\r\n                        response.data.map((val, i) => {\r\n                            dataCallback.push({\r\n                                day: val.day,\r\n                                actions: val.actions,\r\n                                money: val.money,\r\n                                available: false,\r\n                                id: val.id,\r\n                                notes: val.notes,\r\n                            })\r\n                        });\r\n\r\n                        setTimeout(() => {\r\n                            is_loading(false);\r\n                            set_is_has_data(true);\r\n                            set_data_expense_history(dataCallback);\r\n                            set_data_merge_Cells(array);\r\n\r\n                            const countTotals = response.data.reduce((n, {money}) => n + Number(money), 0);\r\n                            if (countTotals > 0) {\r\n                                set_count_total(countTotals);\r\n                            }\r\n                            set_list_checked_id([]);\r\n                            set_isChecked(false);\r\n                            message.success(t('notification.notification_load_data_success'));\r\n                        }, 1000);\r\n\r\n                    });\r\n                } else {\r\n                    setTimeout(() => {\r\n                        is_loading(false);\r\n                        set_is_has_data(false);\r\n                        set_data_expense_history([{\r\n                            day: null,\r\n                            actions: null,\r\n                            money: null,\r\n                            id: null,\r\n                            notes: null,\r\n                        }]);\r\n\r\n                        set_count_total(0);\r\n                        message.warning(t('notification.notification_data_empty'));\r\n                    }, 1000);\r\n                }\r\n            } else {\r\n                message.error(response.error);\r\n                setTimeout(() => {\r\n                    is_loading(false);\r\n                }, 1000);\r\n            }\r\n        });\r\n    }\r\n\r\n    function fnSelectDatePicker(dates, dateStrings) {\r\n        const fromDays = dateStrings[0], toDays = dateStrings[1];\r\n        set_firstDay(fromDays);\r\n        set_lastDay(toDays);\r\n    }\r\n\r\n    function fnOnChange(dates, dateStrings) {\r\n        const fromDays = dateStrings[0], toDays = dateStrings[1];\r\n        set_firstDay(fromDays);\r\n        set_lastDay(toDays);\r\n    }\r\n\r\n    function exports_expense() {\r\n        const hot = ref_expense_history.current.hotInstance;\r\n        const exportPlugin = hot.getPlugin('exportFile');\r\n        exportPlugin.downloadFile('csv', {\r\n            bom: true,\r\n            columnDelimiter: ',',\r\n            columnHeaders: true,\r\n            exportHiddenColumns: true,\r\n            exportHiddenRows: true,\r\n            fileExtension: 'csv',\r\n            filename: 'Handsontable-CSV-file_[YYYY]-[MM]-[DD]',\r\n            mimeType: 'text/csv;charset=utf-8',\r\n            rowDelimiter: '\\r\\n',\r\n            rowHeaders: true\r\n        });\r\n\r\n    }\r\n\r\n\r\n    function fn_input_onChange(e) {\r\n        set_input_text(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={props.classNameHot}>\r\n            <Spin size=\"default\" tip={t(\"text.txt_loading\")} spinning={loading}>\r\n                <Row justify=\"space-around\" align=\"middle\">\r\n                    <Col span={12} offset={3}>\r\n                        <RangePicker style={{width: '100%'}}\r\n                                     defaultValue={\r\n                                         [\r\n                                             moment(lastDay, 'DD-MM-YYYY'),\r\n                                             moment(firstDay, 'DD-MM-YYYY')\r\n                                         ]\r\n                                     }\r\n                                     onChange={fnOnChange}\r\n                                     onCalendarChange={fnSelectDatePicker}\r\n                                     dateRender={current => {\r\n                                         return (\r\n                                             <div className=\"ant-picker-cell-inner\" style={{fontSize: 13}}>\r\n                                                 {current.date()}\r\n                                             </div>\r\n                                         );\r\n                                     }}\r\n                        />\r\n                    </Col>\r\n                    <Col span={8} offset={1}>\r\n                        <Space wrap>\r\n                            {is_has_data && (\r\n                                <Checkbox onChange={fnOnchangeCheckBoxSelectAll}>\r\n                                    {t('text.txt_select_all')}\r\n                                </Checkbox>\r\n                            )}\r\n                            {isChecked && (\r\n                                <Popconfirm\r\n                                    title={t('button.btn_remove_title')}\r\n                                    onConfirm={confirm}\r\n                                    onCancel={cancel}\r\n                                    okText={t('button.btn_yes_txt')}\r\n                                    cancelText={t('button.btn_no_txt')}\r\n                                >\r\n                                    <Button type=\"primary\" danger> {t('button.btn_remove_text')} </Button>\r\n                                </Popconfirm>\r\n                            )}\r\n                        </Space>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <HotTable\r\n                    style={{zIndex: 0}}\r\n                    ref={ref_expense_history}\r\n                    settings={hotSetting_expense_history}\r\n                    colHeaders={fnColHeaders}\r\n                />\r\n                <br/>\r\n                <Row>\r\n                    <Col span={12} push={2}>\r\n                        <Input placeholder={t('input.input_search_text')} allowClear onChange={fn_input_onChange}/>\r\n                    </Col>\r\n                    <Col span={12} style={{textAlign: 'right'}}>\r\n                        <Space direction=\"vertical\">\r\n                            <Space wrap>\r\n                                <Button type=\"primary\" danger\r\n                                        loading={loading}\r\n                                        icon={<SearchOutlined/>}\r\n                                        onClick={fn_search_expense_history}\r\n                                >\r\n                                    {t('button.btn_search')}\r\n                                </Button>\r\n                                <Button onClick={() => exports_expense()} disabled={loading} type=\"default\"\r\n                                        icon={<DownloadOutlined/>} size={'middle'}>\r\n                                    {t('button.btn_donwload')}\r\n                                </Button>\r\n                            </Space>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row gutter={16} align={\"center\"}>\r\n                    <Col span={12} style={{textAlign: 'center'}}>\r\n                        <Badge.Ribbon text={t('expense.name')} color={colorOptions.expense}>\r\n                            <Card headStyle={{fontWeight: '700'}} title={t('text.txt_total')} size=\"small\">\r\n                                <Title style={{color: colorOptions.expense}} level={2}>\r\n                                    {`${count_total}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            </Card>\r\n                        </Badge.Ribbon>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nExpenseHistoryComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {authentication} = state;\r\n    return {\r\n        authentication\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(ExpenseHistoryComponent));\r\n","import React, {useState} from \"react\";\r\nimport {Tabs} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {translate} from 'react-switch-lang';\r\nimport {StickyContainer, Sticky} from 'react-sticky';\r\nimport IncomeComponent from \"./incomes\";\r\nimport IncomeHistoryComponent from \"./income_history\";\r\nimport SavingComponent from \"../saving/saving\";\r\nimport SavingHistoryComponent from \"../saving/saving_history\";\r\nimport ExpenseComponent from \"../expense/expense\";\r\nimport ExpenseHistoryComponent from \"../expense/expense_history\";\r\n\r\nconst {TabPane} = Tabs;\r\nconst IncomePage = (props) => {\r\n    const {t} = props;\r\n\r\n    const [activeKey, set_activeKey] = useState(1);\r\n\r\n    const renderTabBar = (props, DefaultTabBar) => (\r\n        <Sticky bottomOffset={80}>\r\n            {({style}) => (\r\n                <DefaultTabBar {...props} className=\"tab-1-custom-tab-bar\" style={{...style}}/>\r\n            )}\r\n        </Sticky>\r\n    );\r\n\r\n    const onChange = (activeKey) => {\r\n        set_activeKey(activeKey);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <StickyContainer>\r\n                <Tabs animated={true} onChange={onChange} defaultActiveKey={1} renderTabBar={renderTabBar}\r\n                      items={[\r\n                          {\r\n                              key: 1,\r\n                              label: (\r\n                                  <span>\r\n                                          <img style={{marginRight: 10, borderRadius: 20}}\r\n                                               src={require('../../images/icons/income.jpg').default}\r\n                                               alt={\"\"} height={40}/>\r\n                                      {t('income.name')}\r\n                                  </span>\r\n                              ),\r\n                              children: (\r\n                                  <IncomeComponent activeKey={activeKey} {...props}/>\r\n                              ),\r\n                          },\r\n                          {\r\n                              key: 2,\r\n                              label: (\r\n                                  <span>\r\n                                      <img style={{marginRight: 10, borderRadius: 20}}\r\n                                           src={require('../../images/icons/income.jpg').default}\r\n                                           alt={\"\"} height={30}/>\r\n                                      {t('income.history')}\r\n                                  </span>\r\n                              ),\r\n                              children: (<IncomeHistoryComponent activeKey={activeKey} {...props}/>),\r\n                          },\r\n                          {\r\n                              label: null,\r\n                              key: 'null_1',\r\n                              children: null,\r\n                              disabled: true,\r\n                          },\r\n                          {\r\n\r\n                              key: 3 ,\r\n                              label: (\r\n                                  <span>\r\n                                  <img style={{marginRight: 10, borderRadius: 20}}\r\n                                       src={require('../../images/icons/expense.png').default}\r\n                                       alt={\"\"} height={40}/>\r\n                                      {t('expense.name')}\r\n                                </span>\r\n                              ),\r\n                              children: (<ExpenseComponent activeKey={activeKey} {...props}/>),\r\n                          },\r\n                          {\r\n                              key: 4,\r\n                              label: (\r\n                                  <span>\r\n                                  <img style={{marginRight: 10, borderRadius: 20}}\r\n                                       src={require('../../images/icons/expense.png').default}\r\n                                       alt={\"\"} height={30}/>\r\n                                      {t('expense.history')}\r\n                                </span>\r\n                              ),\r\n                              children: (<ExpenseHistoryComponent activeKey={activeKey} {...props}/>),\r\n                          },\r\n                          {\r\n                              label: null,\r\n                              key: 'null_2',\r\n                              children: null,\r\n                              disabled: true,\r\n                          },\r\n                          {\r\n                              key: 5,\r\n                              label: (\r\n                                  <span>\r\n                                      <img style={{marginRight: 10, borderRadius: 20}}\r\n                                           src={require('../../images/icons/saving.png').default}\r\n                                           alt={\"\"} height={40}/>\r\n                                      {t('saving.name')}\r\n                                  </span>\r\n                              ),\r\n                              children: (<SavingComponent activeKey={activeKey} {...props}/>),\r\n                          },\r\n                          {\r\n                              key: 6,\r\n                              label: (\r\n                                  <span>\r\n                                      <img style={{marginRight: 10, borderRadius: 20}}\r\n                                           src={require('../../images/icons/saving.png').default}\r\n                                           alt={\"\"} height={30}/>\r\n                                      {t('saving.history')}\r\n                                  </span>\r\n                              ),\r\n                              children: (<SavingHistoryComponent activeKey={activeKey} {...props}/>),\r\n                          }\r\n                      ]\r\n                      }>\r\n                </Tabs>\r\n            </StickyContainer>\r\n        </div>\r\n    )\r\n}\r\nIncomePage.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {users, authentication} = state;\r\n    const {user} = authentication;\r\n    return {\r\n        user,\r\n        users,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(IncomePage));\r\n","import Highcharts from 'highcharts';\r\nexport default Highcharts.theme = {\r\n    chart: {\r\n        backgroundColor: \"#141414\", //\"#323546\",\r\n    },\r\n    title: {\r\n        style: {\r\n            color: '#ffffff'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            depth: 0,\r\n            stacking: \"normal\",\r\n        }\r\n    },\r\n    xAxis: {\r\n        labels: {\r\n            skew3d: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: '#fff'\r\n            }\r\n        },\r\n        gridLineColor: '#666666'\r\n    },\r\n    yAxis:{\r\n        labels: {\r\n            style: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        gridLineColor: '#666666'\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    colorAxis: [\r\n        {\r\n            gridLineColor: \"rgb(0, 21, 41)\"\r\n        }\r\n    ],\r\n    legend: {\r\n        itemStyle: {\r\n            color: '#fff'\r\n        }\r\n    }\r\n}\r\n","import Highcharts from 'highcharts';\r\nexport default Highcharts.theme = {\r\n    chart: {\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    title: {\r\n        style: {\r\n            color: '#666666'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            depth: 0,\r\n            stacking: \"normal\",\r\n        }\r\n    },\r\n    xAxis: {\r\n        labels: {\r\n            skew3d: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: '#666666'\r\n            }\r\n        },\r\n        gridLineColor: '#ddd'\r\n    },\r\n    yAxis:{\r\n        labels: {\r\n            style: {\r\n                color: '#666666'\r\n            }\r\n        },\r\n        gridLineColor: '#ddd'\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    colorAxis: [\r\n        {\r\n            gridLineColor: \"#ccc\"\r\n        }\r\n    ],\r\n    legend: {\r\n        itemStyle: {\r\n            color: '#666666'\r\n        }\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Highcharts from 'highcharts';\r\nimport highcharts3d from \"highcharts/highcharts-3d\";\r\nimport darkgreen from \"../../../themes/highcharts/darkgreen\";\r\nimport gridlight from \"../../../themes/highcharts/gridlight\";\r\nimport {translate} from 'react-switch-lang';\r\nimport {colorOptions} from \"../../../config/colors_config.json\";\r\n\r\nhighcharts3d(Highcharts);\r\nconst DefaultChart = (props) => {\r\n    const {t, data, type_chart, id_name} = props;\r\n    const {year} = data;\r\n    const chartRef = React.createRef();\r\n    let [loading, isLoading] = useState(true);\r\n    const [series, setSeries] = useState([\r\n        {\r\n            name: t('income.name'),\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null],\r\n            stack: \"income\"\r\n        },\r\n        {\r\n            name: t('expense.name'),\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null],\r\n            stack: \"expense_saving\"\r\n        },\r\n        {\r\n            name: t('saving.name'),\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null],\r\n            stack: \"expense_saving\"\r\n        }\r\n    ]);\r\n\r\n    const [chartOptions, setChartOptions] = useState({\r\n        chart: {\r\n            type: type_chart,\r\n            borderColor: colorOptions.saving,\r\n            //borderRadius: 20,\r\n            //borderWidth: 1,\r\n            options3d: {\r\n                enabled: true,\r\n                alpha: 0,\r\n                beta: 0,\r\n                viewDistance: 25,\r\n                depth: 40\r\n            },\r\n            style: {\r\n                fontFamily: 'Open Sans, Arial, Helvetica, sans-serif',\r\n            },\r\n        },\r\n        title: {\r\n            text: t('chart.year') + ' ' + year,\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            column: {\r\n                depth: 0,\r\n                stacking: \"normal\",\r\n                pointPadding: 0.2,\r\n                borderWidth: 0\r\n            },\r\n            series: {\r\n                borderRadiusTopLeft: 8,\r\n                borderRadiusTopRight: 8\r\n            }\r\n        },\r\n        colors: [colorOptions.income, colorOptions.expense, colorOptions.saving],\r\n        xAxis: {\r\n            labels: {\r\n                style: {\r\n                   // font: '12px Arial, sans-serif',\r\n                }\r\n            },\r\n            gridLineWidth: 0.3,\r\n            categories: [\r\n                t('month.Jan'),\r\n                t('month.Feb'),\r\n                t('month.Mar'),\r\n                t('month.Apr'),\r\n                t('month.May'),\r\n                t('month.Jun'),\r\n                t('month.Jul'),\r\n                t('month.Aug'),\r\n                t('month.Sep'),\r\n                t('month.Oct'),\r\n                t('month.Nov'),\r\n                t('month.Dec')]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Đơn vị (VNĐ)',\r\n            },\r\n            gridLineWidth: 0.3,\r\n            labels: {\r\n                formatter: function () {\r\n                    if (this.value > 0) {\r\n                        if (this.value >= 1E6) {\r\n                            if (this.value >= 1E9) {\r\n                                let num = (this.value / 1E9).toFixed(2);\r\n                                return Number(num) + t(\"number.billion\");\r\n                            } else {\r\n                                let num = (this.value / 1E6).toFixed(2);\r\n                                return Number(num) + t('number.million');\r\n                            }\r\n                        }\r\n                        let num = this.value / 1E3;\r\n                        return Number(num) + t(\"number.thousand\");\r\n                    } else if (this.value === 0) {\r\n                        return this.value;\r\n                    } else {\r\n                        if (this.value <= -1E6) {\r\n                            let num = (this.value / 1E6).toFixed(2);\r\n                            return Number(num) + t('number.million');\r\n                        }\r\n                        let num = this.value / 1E3;\r\n                        return Number(num) + t(\"number.thousand\");\r\n                    }\r\n                },\r\n                style: {\r\n                    // fontSize: '12px',\r\n                    // fontWeight: 'bold'\r\n                }\r\n            },\r\n        },\r\n        tooltip: {\r\n            formatter: fn_formatter\r\n        },\r\n        series: series,\r\n    })\r\n\r\n    function fn_formatter(tooltip, x = this.x, y = this.y, series = this.series, point = this.point) {\r\n        const total = t('home.total');\r\n        let stackTotal = point.stackTotal;\r\n        if (stackTotal) {\r\n            stackTotal = stackTotal.toLocaleString()\r\n        }\r\n        if (y) {\r\n            y = this.y.toLocaleString();\r\n        }\r\n        if (type_chart === \"column\") {\r\n            return (\r\n                \"<b>\" +\r\n                x.replace(\"<br/>\", \"\") +\r\n                \"</b><br/>\" +\r\n                series.name +\r\n                \": \" +\r\n                y +\r\n                \"<br/>\" +\r\n                \"<b> \" + total + \" :</b> \" + stackTotal\r\n            );\r\n        } else {\r\n            return (\r\n                \"<b>\" +\r\n                x.replace(\"<br/>\", \"\") +\r\n                \"</b><br/>\" +\r\n                series.name +\r\n                \": \" +\r\n                y\r\n            );\r\n        }\r\n    }\r\n\r\n    function fn_update_chart_data(data_income, data_expense, data_saving, year, chart) {\r\n        let i,\r\n            array_income = [],\r\n            array_expense = [],\r\n            array_saving = [];\r\n        for (i = 1; i <= 12; i++) {\r\n            // --- check data income\r\n            if (data_income) {\r\n                let val;\r\n                data_income.map((data, index) => {\r\n                    if (data.period === i) {\r\n                        val = parseInt(data.totalMoney);\r\n                    }\r\n                });\r\n\r\n                if (val) {\r\n                    array_income.push(val);\r\n                } else {\r\n                    array_income.push(null);\r\n                }\r\n            }\r\n\r\n            if (data_expense) {\r\n                let val;\r\n                data_expense.map((data, index) => {\r\n                    if (data.period === i) {\r\n                        val = parseInt(data.totalMoney);\r\n                    }\r\n                });\r\n\r\n                if (val) {\r\n                    array_expense.push(val);\r\n                } else {\r\n                    array_expense.push(null);\r\n                }\r\n            }\r\n\r\n            if (data_saving) {\r\n                let val;\r\n                data_saving.map((data, index) => {\r\n                    if (data.period === i) {\r\n                        val = parseInt(data.totalMoney);\r\n                    }\r\n                });\r\n\r\n                if (val) {\r\n                    array_saving.push(val);\r\n                } else {\r\n                    array_saving.push(null);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (chart.renderTo.id === `${id_name}-${year}`) {\r\n            if (array_income.length > 0) {\r\n                if (chart.series) {\r\n                    chart.series[0].setData(array_income);\r\n                }\r\n            }\r\n            if (array_expense.length > 0) {\r\n                if (chart.series) {\r\n                    chart.series[1].setData(array_expense);\r\n                }\r\n            }\r\n            if (array_saving.length > 0) {\r\n                if (chart.series) {\r\n                    chart.series[2].setData(array_saving);\r\n                }\r\n            }\r\n\r\n            if (array_income.length === 0 && array_expense.length === 0 && array_saving.length === 0) {\r\n                chart.destroy();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //------------- Update language\r\n    useEffect(() => {\r\n        const chart = chartRef.current.chart;\r\n        if (chart) {\r\n            chart.title.update({text: t('chart.year') + ' ' + year});\r\n            chart.series[0].update({name: t('income.name')});\r\n            chart.series[1].update({name: t('expense.name')});\r\n            chart.series[2].update({name: t('saving.name')});\r\n            chart.xAxis[0].setCategories([t('month.Jan'), t('month.Feb'), t('month.Mar'), t('month.Apr'), t('month.May'),\r\n                t('month.Jun'), t('month.Jul'), t('month.Aug'), t('month.Sep'), t('month.Oct'), t('month.Nov'), t('month.Dec')]);\r\n        }\r\n    }, [props.valueLanguage]);\r\n\r\n    //------------ Update theme\r\n    useEffect(() => {\r\n        const chart = chartRef.current.chart;\r\n        if (chart) {\r\n            if (props.theme === \"light\") {\r\n                setChartOptions(gridlight);\r\n            } else {\r\n                setChartOptions(darkgreen);\r\n            }\r\n        }\r\n    }, [props.theme]);\r\n\r\n    useEffect(() => {\r\n        const chart = chartRef.current.chart;\r\n        if (chart) {\r\n            if (props.data) {\r\n                isLoading(loading = true);\r\n                const {year, incomeDto, expenseDto, savingDto} = props.data;\r\n                fn_update_chart_data(incomeDto, expenseDto, savingDto, year, chart);\r\n                isLoading(loading = false);\r\n            }\r\n        }\r\n    }, [props.data]);\r\n\r\n    useEffect(() => {\r\n        const chart = chartRef.current.chart;\r\n        if (chart) {\r\n            chart.series[0].update({type: props.type_chart});\r\n            chart.series[1].update({type: props.type_chart});\r\n            chart.series[2].update({type: props.type_chart});\r\n        }\r\n    }, [props.type_chart]);\r\n\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <br/>\r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={chartOptions}\r\n                ref={chartRef}\r\n                containerProps={{className: `${id_name}-${year}`, id: `${id_name}-${year}`}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nDefaultChart.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {users, authentication} = state;\r\n    const {user} = authentication;\r\n    return {\r\n        user,\r\n        users\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(DefaultChart));\r\n","import Highcharts from 'highcharts';\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\nexport default Highcharts.theme = {\r\n    chart: {\r\n        backgroundColor: \"#141414\", //\"#323546\",\r\n    },\r\n    title: {\r\n        style: {\r\n            color: '#ffffff'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            depth: 0\r\n        }\r\n    },\r\n    xAxis: {\r\n        labels: {\r\n            skew3d: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: '#fff'\r\n            }\r\n        },\r\n        gridLineColor: '#666666'\r\n    },\r\n    yAxis:{\r\n        labels: {\r\n            style: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        gridLineColor: '#666666'\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    colorAxis: [\r\n        {\r\n            gridLineColor: \"rgb(0, 21, 41)\"\r\n        }\r\n    ],\r\n    legend: {\r\n        itemStyle: {\r\n            color: '#fff'\r\n        }\r\n    },\r\n    colors: [\r\n        colorOptions.income,\r\n        colorOptions.expense,\r\n        colorOptions.saving\r\n    ],\r\n}\r\n","import Highcharts from 'highcharts';\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\nexport default Highcharts.theme = {\r\n    chart: {\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    title: {\r\n        style: {\r\n            color: '#666666'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            depth: 0\r\n        }\r\n    },\r\n    xAxis: {\r\n        labels: {\r\n            skew3d: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: '#666666'\r\n            }\r\n        },\r\n        gridLineColor: '#ddd'\r\n    },\r\n    yAxis:{\r\n        labels: {\r\n            style: {\r\n                color: '#666666'\r\n            }\r\n        },\r\n        gridLineColor: '#ddd'\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    colorAxis: [\r\n        {\r\n            gridLineColor: \"#ccc\"\r\n        }\r\n    ],\r\n    legend: {\r\n        itemStyle: {\r\n            color: '#666666'\r\n        }\r\n    },\r\n    colors: [\r\n        colorOptions.income,\r\n        colorOptions.expense,\r\n        colorOptions.saving\r\n    ],\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport Highcharts from 'highcharts';\r\nimport highcharts3d from \"highcharts/highcharts-3d\";\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport darkgreen from \"../../../themes/highcharts/darkgreen_year_chart\";\r\nimport gridlight from \"../../../themes/highcharts/gridlight_year_chart\";\r\nimport {translate} from 'react-switch-lang';\r\nimport {colorOptions} from \"../../../config/colors_config.json\";\r\n\r\nhighcharts3d(Highcharts);\r\n\r\nconst YearsChart = (props) => {\r\n    const {t, data, type_chart, id_name} = props;\r\n    const chartYearRef = React.createRef();\r\n    let [loading, isLoading] = useState(true);\r\n    let [list_year, set_list_year] = useState([]);\r\n    const [data_year, set_data_year] = useState([{\r\n        name: t('income.name'),\r\n        data: []\r\n    }, {\r\n        name: t('expense.name'),\r\n        data: []\r\n    }, {\r\n        name: t('saving.name'),\r\n        data: []\r\n    }]);\r\n\r\n    const [chartOptions, setChartOptions] = useState({\r\n        chart: {\r\n            type: type_chart,\r\n            borderColor: colorOptions.saving,\r\n            //borderRadius: 20,\r\n            //borderWidth: 1,\r\n            options3d: {\r\n                enabled: true,\r\n                alpha: 0,\r\n                beta: 10,\r\n                viewDistance: 25,\r\n                depth: 40\r\n            },\r\n            style: {\r\n                fontFamily: 'Open Sans, Arial, Helvetica, sans-serif'\r\n            },\r\n        },\r\n        title: {\r\n            text: t('chart.txt_chart_income_expensive_year_by_year')\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n\r\n        subtitle: {\r\n            //text: 'Source: <a href=\"https://irecusa.org/programs/solar-jobs-census/\" target=\"_blank\">IREC</a>'\r\n        },\r\n\r\n        yAxis: {\r\n            gridLineWidth: 0.3,\r\n            title: {\r\n                text: 'Đơn vị (VNĐ)',\r\n            },\r\n            labels: {\r\n                formatter: function () {\r\n                    if (this.value > 0) {\r\n                        if (this.value >= 1E6) {\r\n                            if (this.value >= 1E9) {\r\n                                let num = (this.value / 1E9).toFixed(2);\r\n                                return Number(num) + t(\"number.billion\");\r\n                            } else {\r\n                                let num = (this.value / 1E6).toFixed(2);\r\n                                return Number(num) + t('number.million');\r\n                            }\r\n                        }\r\n                        let num = this.value / 1E3;\r\n                        return Number(num) + t(\"number.thousand\");\r\n                    } else if (this.value === 0) {\r\n                        return this.value;\r\n                    } else {\r\n                        if (this.value <= -1E6) {\r\n                            let num = (this.value / 1E6).toFixed(2);\r\n                            return Number(num) + t('number.million');\r\n                        }\r\n                        let num = this.value / 1E3;\r\n                        return Number(num) + t(\"number.thousand\");\r\n                    }\r\n                },\r\n                style: {\r\n                    // fontSize: '12px',\r\n                    // fontWeight: 'bold'\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        xAxis: {\r\n            accessibility: {},\r\n            categories: list_year,\r\n            gridLineWidth: 0.3,\r\n            labels: {\r\n                style: {\r\n                    font: '13px Arial, sans-serif',\r\n                    fontWeight: 'bold'\r\n                }\r\n            }\r\n        },\r\n        plotOptions: {\r\n            series: {\r\n                label: {\r\n                    connectorAllowed: false\r\n                },\r\n                //pointStart: 2010\r\n            }\r\n        },\r\n        responsive: {\r\n            rules: [{\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'horizontal',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        series: data_year\r\n    });\r\n\r\n    //------------ Update theme\r\n    useEffect(() => {\r\n        const chart = chartYearRef.current.chart;\r\n        if (chart) {\r\n            if (props.theme === \"light\") {\r\n                setChartOptions(gridlight);\r\n            } else {\r\n                setChartOptions(darkgreen);\r\n            }\r\n        }\r\n    }, [props.theme]);\r\n\r\n    useEffect(() => {\r\n        const chart = chartYearRef.current.chart;\r\n        if (chart) {\r\n            let i, array_income = [],\r\n                array_expenseDto = [],\r\n                array_saving = [],\r\n                array_year = [];\r\n            if (props.data.length > 0) {\r\n                props.data.map((data, index) => {\r\n\r\n                    // data income\r\n                    if (data.incomeDto.length > 0) {\r\n                        let count = 0;\r\n                        data.incomeDto.map((value, i) => {\r\n                            count += parseInt(value.totalMoney);\r\n                        });\r\n                        array_income.push(count);\r\n                    } else {\r\n                        array_income.push(null);\r\n                    }\r\n\r\n                    // data expense\r\n                    if (data.expenseDto.length > 0) {\r\n                        let count = 0;\r\n                        data.expenseDto.map((value, i) => {\r\n                            count += parseInt(value.totalMoney);\r\n                        });\r\n                        array_expenseDto.push(count);\r\n                    } else {\r\n                        array_expenseDto.push(null);\r\n                    }\r\n\r\n                    // data saving\r\n                    if (data.savingDto.length > 0) {\r\n                        let count = 0;\r\n                        data.savingDto.map((value, i) => {\r\n                            count += parseInt(value.totalMoney);\r\n                        });\r\n                        array_saving.push(count);\r\n                    } else {\r\n                        array_saving.push(null);\r\n                    }\r\n\r\n                    array_year.push(data.year);\r\n\r\n                    //-------------- Update charts\r\n                    if (array_income.length > 0) {\r\n                        if (chart.series) {\r\n                            chart.series[0].setData(array_income);\r\n                        }\r\n                    }\r\n                    if (array_expenseDto.length > 0) {\r\n                        if (chart.series) {\r\n                            chart.series[1].setData(array_expenseDto);\r\n                        }\r\n                    }\r\n                    if (array_saving.length > 0) {\r\n                        if (chart.series) {\r\n                            chart.series[2].setData(array_saving);\r\n                        }\r\n                    }\r\n\r\n                    if (array_income.length === 0 && array_expenseDto.length === 0 && array_saving.length === 0) {\r\n                        chart.destroy();\r\n                    }\r\n                })\r\n\r\n                if (array_year.length > 0) {\r\n                    chart.xAxis[0].setCategories(array_year);\r\n                }\r\n            }\r\n        }\r\n    }, [props.data]);\r\n\r\n    useEffect(() => {\r\n        const chart = chartYearRef.current.chart;\r\n        if (chart) {\r\n            chart.series[0].update({type: props.type_chart});\r\n            chart.series[1].update({type: props.type_chart});\r\n            chart.series[2].update({type: props.type_chart});\r\n        }\r\n    }, [props.type_chart]);\r\n\r\n    //------------- Update language\r\n    useEffect(() => {\r\n        const chart = chartYearRef.current.chart;\r\n        if (chart) {\r\n            chart.title.update({text: t('chart.txt_chart_income_expensive_year_by_year')});\r\n            chart.series[0].update({name: t('income.name')});\r\n            chart.series[1].update({name: t('expense.name')});\r\n            chart.series[2].update({name: t('saving.name')});\r\n        }\r\n    }, [props.valueLanguage]);\r\n\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <br/>\r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={chartOptions}\r\n                ref={chartYearRef}\r\n                containerProps={{className: `${id_name}`, id: `${id_name}`}}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nYearsChart.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {users, authentication} = state;\r\n    const {user} = authentication;\r\n    return {\r\n        user,\r\n        users\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(YearsChart));","import Highcharts from 'highcharts';\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\nexport default Highcharts.theme = {\r\n    chart: {\r\n        backgroundColor: \"#141414\", //\"#323546\",\r\n    },\r\n    title: {\r\n        style: {\r\n            color: '#ffffff'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            depth: 0\r\n        }\r\n    },\r\n    xAxis: {\r\n        labels: {\r\n            skew3d: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: '#fff'\r\n            }\r\n        },\r\n        gridLineColor: '#666666'\r\n    },\r\n    yAxis:{\r\n        labels: {\r\n            style: {\r\n                color: '#fff'\r\n            }\r\n        },\r\n        gridLineColor: '#666666'\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    colorAxis: [\r\n        {\r\n            gridLineColor: \"rgb(0, 21, 41)\"\r\n        }\r\n    ],\r\n    legend: {\r\n        itemStyle: {\r\n            color: '#fff'\r\n        }\r\n    },\r\n    colors: [\r\n        colorOptions.income,\r\n        colorOptions.expense,\r\n        colorOptions.saving\r\n    ],\r\n}","import Highcharts from 'highcharts';\r\nimport {colorOptions} from \"../../config/colors_config.json\";\r\nexport default Highcharts.theme = {\r\n    chart: {\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    title: {\r\n        style: {\r\n            color: '#666666'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            depth: 0\r\n        }\r\n    },\r\n    xAxis: {\r\n        labels: {\r\n            skew3d: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: '#666666'\r\n            }\r\n        },\r\n        gridLineColor: '#ddd'\r\n    },\r\n    yAxis:{\r\n        labels: {\r\n            style: {\r\n                color: '#666666'\r\n            }\r\n        },\r\n        gridLineColor: '#ddd'\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    colorAxis: [\r\n        {\r\n            gridLineColor: \"#ccc\"\r\n        }\r\n    ],\r\n    legend: {\r\n        itemStyle: {\r\n            color: '#666666'\r\n        }\r\n    },\r\n    colors: [\r\n        colorOptions.income,\r\n        colorOptions.expense,\r\n        colorOptions.saving\r\n    ],\r\n}","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Highcharts from 'highcharts';\r\nimport highcharts3d from \"highcharts/highcharts-3d\";\r\nimport {translate} from 'react-switch-lang';\r\nimport {colorOptions} from \"../../../config/colors_config.json\";\r\nimport moment from \"moment\";\r\nimport dark_theme from \"../../../themes/highcharts/dark_theme_column_chart\";\r\nimport light_theme from \"../../../themes/highcharts/light_theme_column_chart\";\r\n\r\nhighcharts3d(Highcharts);\r\n\r\nconst PieChartComponent = (props) => {\r\n    const {t, array_data} = props;\r\n    const chartColumnRef = React.createRef();\r\n    let [loading, isLoading] = useState(true);\r\n    const [this_year, set_this_year] = useState(moment().year());\r\n    const [this_month, set_this_month] = useState(moment().month() + 1);\r\n    const [object_data, set_object_data] = useState([\r\n        {\r\n            name: t('income.name'),\r\n            data: [null],\r\n            month: null\r\n        },\r\n        {\r\n            name: t('expense.name'),\r\n            data: [null],\r\n            month: null\r\n        },\r\n        {\r\n            name: t('saving.name'),\r\n            data: [null],\r\n            month: null\r\n        }\r\n    ]);\r\n    const [chartOptions, setChartOptions] = useState({\r\n        chart: {\r\n            type: 'column',\r\n            //borderRadius: 20,\r\n            //borderWidth: 1,\r\n            options3d: {\r\n                enabled: true,\r\n                alpha: 0,\r\n                beta: 20,\r\n                viewDistance: 25,\r\n                depth: 40\r\n            },\r\n            style: {\r\n                fontFamily: 'Open Sans, Arial, Helvetica, sans-serif',\r\n            },\r\n            borderColor: colorOptions.saving\r\n        },\r\n        title: {\r\n            text: t('chart.txt_chart_income_expensive_month_by_month')\r\n        },\r\n        subtitle: {\r\n            text: this_month + ' / ' + this_year\r\n        },\r\n        xAxis: {\r\n            categories: [],\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Đơn vị (VNĐ)',\r\n            },\r\n            gridLineWidth: 0.3,\r\n            labels: {\r\n                formatter: function () {\r\n                    if (this.value > 0) {\r\n                        if (this.value >= 1E6) {\r\n                            if (this.value >= 1E9) {\r\n                                let num = (this.value / 1E9).toFixed(2);\r\n                                return Number(num) + t(\"number.billion\");\r\n                            } else {\r\n                                let num = (this.value / 1E6).toFixed(2);\r\n                                return Number(num) + t('number.million');\r\n                            }\r\n                        }\r\n                        let num = this.value / 1E3;\r\n                        return Number(num) + t(\"number.thousand\");\r\n                    } else if (this.value === 0) {\r\n                        return this.value;\r\n                    } else {\r\n                        if (this.value <= -1E6) {\r\n                            let num = (this.value / 1E6).toFixed(2);\r\n                            return Number(num) + t('number.million');\r\n                        }\r\n                        let num = this.value / 1E3;\r\n                        return Number(num) + t(\"number.thousand\");\r\n                    }\r\n                },\r\n                style: {\r\n                    font: '13px Arial, sans-serif'\r\n                }\r\n            },\r\n        },\r\n        tooltip: {formatter: fn_formatter},\r\n        plotOptions: {\r\n            column: {\r\n                depth: 0,\r\n                pointPadding: 0.2,\r\n                borderWidth: 0\r\n            }\r\n        },\r\n        series: object_data,\r\n        colors: [colorOptions.income, colorOptions.expense, colorOptions.saving],\r\n    });\r\n\r\n    function fn_formatter(tooltip, x = this.x, y = this.y, series = this.series, point = this.point) {\r\n        const total = t('home.total');\r\n        let stackTotal = point.stackTotal;\r\n        if (stackTotal) {\r\n            stackTotal = stackTotal.toLocaleString()\r\n        }\r\n        if (y) {\r\n            y = this.y.toLocaleString();\r\n        }\r\n        return (\r\n            \"<b>\" + x + \"</b><br/>\" + series.name + \": \" + y\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        const chart = chartColumnRef.current.chart;\r\n        if (chart) {\r\n            if (props.array_data) {\r\n                isLoading(loading = true);\r\n                fn_update_chart_data(props.array_data, chart);\r\n                isLoading(loading = false);\r\n            }\r\n        }\r\n    }, [props.array_data]);\r\n\r\n\r\n    function fn_update_chart_data(dataObject, chart) {\r\n        dataObject.map((value, i) => {\r\n            if (value.year === this_year) {\r\n                let i,\r\n                    array_income = [],\r\n                    array_expense = [],\r\n                    array_saving = [];\r\n                // --- check data income\r\n                if (value.incomeDto) {\r\n                    let val;\r\n                    value.incomeDto.map((data, index) => {\r\n                        if (data.period === this_month) {\r\n                            val = parseInt(data.totalMoney);\r\n                        }\r\n                    });\r\n\r\n                    if (val) {\r\n                        array_income.push(val);\r\n                    } else {\r\n                        array_income.push(0);\r\n                    }\r\n                }\r\n\r\n                if (value.expenseDto) {\r\n                    let val;\r\n                    value.expenseDto.map((data, index) => {\r\n                        if (data.period === this_month) {\r\n                            val = parseInt(data.totalMoney);\r\n                        }\r\n                    });\r\n\r\n                    if (val) {\r\n                        array_expense.push(val);\r\n                    } else {\r\n                        array_expense.push(0);\r\n                    }\r\n                }\r\n\r\n                if (value.savingDto) {\r\n                    let val;\r\n                    value.savingDto.map((data, index) => {\r\n                        if (data.period === this_month) {\r\n                            val = parseInt(data.totalMoney);\r\n                        }\r\n                    });\r\n\r\n                    if (val) {\r\n                        array_saving.push(val);\r\n                    } else {\r\n                        array_saving.push(0);\r\n                    }\r\n                }\r\n\r\n                //if (array_income.length > 0) {\r\n                if (chart.series) {\r\n                    chart.series[0].setData(array_income);\r\n                }\r\n                //}\r\n                //if (array_expense.length > 0) {\r\n                if (chart.series) {\r\n                    chart.series[1].setData(array_expense);\r\n                }\r\n                //}\r\n                //if (array_saving.length > 0) {\r\n                if (chart.series) {\r\n                    chart.series[2].setData(array_saving);\r\n                }\r\n                //}\r\n\r\n            }\r\n        });\r\n\r\n        const temp_month = [];\r\n        switch (this_month) {\r\n            case 1:\r\n                temp_month.push(t('month.January'));\r\n                break;\r\n            case 2:\r\n                temp_month.push(t('month.February'));\r\n                break;\r\n            case 3:\r\n                temp_month.push(t('month.March'));\r\n                break;\r\n            case 4:\r\n                temp_month.push(t('month.April'));\r\n                break;\r\n            case 5:\r\n                temp_month.push(t('month.May_'));\r\n                break;\r\n            case 6:\r\n                temp_month.push(t('month.June'));\r\n                break;\r\n            case 7:\r\n                temp_month.push(t('month.July'));\r\n                break;\r\n            case 8:\r\n                temp_month.push(t('month.August'));\r\n                break;\r\n            case 9:\r\n                temp_month.push(t('month.September'));\r\n                break;\r\n            case 10:\r\n                temp_month.push(t('month.October'));\r\n                break;\r\n            case 11:\r\n                temp_month.push(t('month.November'));\r\n                break;\r\n            case 12:\r\n                temp_month.push(t('month.December'));\r\n                break;\r\n        }\r\n\r\n        chart.xAxis[0].update({categories: temp_month});\r\n    }\r\n\r\n//------------- Update language\r\n    useEffect(() => {\r\n        const chart = chartColumnRef.current.chart;\r\n        if (chart) {\r\n            chart.title.update({text: t('chart.txt_chart_income_expensive_month_by_month')});\r\n            chart.series[0].update({name: t('income.name')});\r\n            chart.series[1].update({name: t('expense.name')});\r\n            chart.series[2].update({name: t('saving.name')});\r\n        }\r\n    }, [props.valueLanguage]);\r\n\r\n//------------ Update theme\r\n    useEffect(() => {\r\n        const chart = chartColumnRef.current.chart;\r\n        if (chart) {\r\n            if (props.theme === \"light\") {\r\n                setChartOptions(light_theme);\r\n            } else {\r\n                setChartOptions(dark_theme);\r\n            }\r\n        }\r\n    }, [props.theme]);\r\n\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <br/>\r\n            <br/>\r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={chartOptions}\r\n                ref={chartColumnRef}\r\n            />\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nPieChartComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {users, authentication} = state;\r\n    const {user} = authentication;\r\n    return {\r\n        user,\r\n        users\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(PieChartComponent));","import React, {useEffect, useState} from \"react\";\r\nimport {Col, Row, List, Card, Segmented, Space, Dropdown, Button, Spin, Empty} from \"antd\";\r\nimport DefaultChart from \"./default/default_chart\";\r\nimport moment from 'moment';\r\nimport {DownOutlined, EllipsisOutlined, LineChartOutlined, BarChartOutlined} from \"@ant-design/icons\";\r\nimport YearsChart from \"./default/years_chart\";\r\nimport {split_long_array_with_size} from \"../../helpers/helpers\";\r\nimport {func} from \"prop-types\";\r\nimport PieChartComponent from \"./default/pie_chart\";\r\n\r\nconst ChartComponent = (props) => {\r\n    const {array_data} = props;\r\n    const {t} = props;\r\n    let [default_page, set_default_page] = useState(1);\r\n    const current_year = moment().year();\r\n    const [defaultChart, set_defaultChart] = useState('column');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [array_data_year_chart, set_array_data_year_chart] = useState([]);\r\n    const [default_segmented_options, set_default_segmented_options] = useState(1);\r\n\r\n    function onClick(e) {\r\n        set_defaultChart(e.key);\r\n    }\r\n\r\n    function fn_onChange_Segmented(value) {\r\n        set_default_segmented_options(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(false);\r\n        if (props.array_data) {\r\n            const data = split_long_array_with_size(props.array_data, 5);\r\n            if (data.length > 0) {\r\n                set_array_data_year_chart(data);\r\n            }\r\n        }\r\n    }, [props.array_data]);\r\n\r\n    const items = [\r\n        {\r\n            label: t('chart.column_chart'),\r\n            key: 'column',\r\n            icon: <BarChartOutlined />\r\n        },\r\n        {\r\n            label: t('chart.spine_chart'),\r\n            key: 'spline',\r\n            icon: <LineChartOutlined />\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Row gutter={12}>\r\n            <Col lg={24} md={24} xs={24}>\r\n                <Card>\r\n                    <Row gutter={24}>\r\n                        <Col span={12} style={{textAlign: 'left'}}>\r\n                            <Segmented defaultValue={default_segmented_options} onChange={fn_onChange_Segmented}\r\n                                       options={[{\r\n                                           label: t('chart.txt_monthly'),\r\n                                           value: 1,\r\n                                       }, {\r\n                                           label: t('chart.txt_yearly'),\r\n                                           value: 2,\r\n                                       }]}/>\r\n                        </Col>\r\n                        <Col span={12} style={{textAlign: 'right'}}>\r\n                            <Dropdown menu={{\r\n                                items,\r\n                                onClick,\r\n                            }}>\r\n                                <Button onClick={(e) => e.preventDefault()}>\r\n                                    {defaultChart === 'column' ? t('chart.column_chart') : t('chart.spine_chart')}\r\n                                    <DownOutlined/>\r\n                                </Button>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    {(() => {\r\n                        if (default_segmented_options === 1) {\r\n                            if (array_data.length === 0) {\r\n                                return (\r\n                                    <Empty/>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <List\r\n                                        dataSource={array_data}\r\n                                        itemLayout={\"vertical\"}\r\n                                        size=\"large\"\r\n                                        loading={isLoading}\r\n                                        pagination={{\r\n                                            onChange: page => {\r\n\r\n                                            },\r\n                                            pageSize: 1,\r\n                                            total: array_data.length,\r\n                                            defaultCurrent: array_data.length\r\n                                        }}\r\n                                        renderItem={item => (\r\n                                            <List.Item key={item.year} style={{padding: 0}}>\r\n                                                <DefaultChart type_chart={defaultChart}\r\n                                                              id_name={`${defaultChart}` + \"-chart\"}\r\n                                                              data={item} {...props}/>\r\n                                            </List.Item>\r\n                                        )}\r\n                                    />\r\n                                )\r\n                            }\r\n                        } else if (default_segmented_options === 2) {\r\n                            if (array_data.length === 0) {\r\n                                return (\r\n                                    <Empty/>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <Spin spinning={isLoading}>\r\n                                        <List\r\n                                            dataSource={array_data_year_chart}\r\n                                            itemLayout={\"vertical\"}\r\n                                            size=\"large\"\r\n                                            loading={isLoading}\r\n                                            pagination={{\r\n                                                onChange: page => {\r\n\r\n                                                },\r\n                                                pageSize: 1\r\n                                            }}\r\n                                            renderItem={(item, i) => (\r\n                                                <List.Item key={i} style={{padding: 0}}>\r\n                                                    <YearsChart type_chart={defaultChart}\r\n                                                                id_name={`${defaultChart}` + \"-year-chart\" + i}\r\n                                                                data={item} {...props}/>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                    </Spin>\r\n                                )\r\n                            }\r\n                        }\r\n                    })()}\r\n                </Card>\r\n            </Col>\r\n            <Col lg={8} md={24} xs={24}>\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ChartComponent;\r\n","export function calculateSum(array, property) {\r\n    const total = array.reduce((accumulator, object) => {\r\n        return parseInt(accumulator) + parseInt(object[property]);\r\n    }, 0);\r\n\r\n    return total;\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Col, Row, Card, Layout, Avatar, Typography, Space} from 'antd';\r\nimport PropTypes, {bool} from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {translate} from \"react-switch-lang\";\r\nimport {calculateSum} from \"../../helpers/calculateSum\";\r\nimport {colorOptions, flatColors} from \"../../config/colors_config.json\";\r\nimport {ClockCircleFilled, ClockCircleOutlined} from '@ant-design/icons';\r\n\r\nconst {Title} = Typography;\r\nconst {Meta} = Card;\r\n\r\nconst CountTotals = (props) => {\r\n    const {data_all_year, t} = props;\r\n    const [loading, setLoading] = useState(true);\r\n    const [txt_income, set_txt_income] = useState(0);\r\n    const [txt_expense, set_txt_expense] = useState(0);\r\n    const [txt_saving, set_txt_saving] = useState(0);\r\n    const [txt_remain, set_txt_remain] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (props.data_all_year.data) {\r\n            fn_render_data_multi(\r\n                props.data_all_year.data.incomeDto,\r\n                props.data_all_year.data.expenseDto,\r\n                props.data_all_year.data.savingDto\r\n            );\r\n        }\r\n    }, [props.data_all_year]);\r\n\r\n    function fn_render_data_multi(dataIncome, dataExpense, dataSaving) {\r\n        let total_incomes = 0,\r\n            total_expense = 0,\r\n            total_saving = 0,\r\n            total_remain = 0;\r\n        if (dataIncome.length > 0) {\r\n            total_incomes = calculateSum(dataIncome, 'totalMoney');\r\n            if (total_incomes != null) {\r\n                set_txt_income(total_incomes);\r\n            }\r\n\r\n        }\r\n        if (dataExpense.length > 0) {\r\n            total_expense = calculateSum(dataExpense, 'totalMoney');\r\n            if (total_expense != null) {\r\n                set_txt_expense(total_expense);\r\n            }\r\n        }\r\n        if (dataSaving.length > 0) {\r\n            total_saving = calculateSum(dataSaving, 'totalMoney');\r\n            if (total_saving != null) {\r\n                set_txt_saving(total_saving);\r\n            }\r\n        }\r\n\r\n        total_remain = total_incomes - (total_expense + total_saving);\r\n        set_txt_remain(total_remain);\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <Card title=\"Thống kê toàn bộ thu nhập, chi phí, tiết kiệm đã nhập\">\r\n            <Space\r\n                direction=\"vertical\"\r\n                size=\"middle\"\r\n                style={{\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <Col lg={24} md={12} sm={12} xs={12} span={6}>\r\n                    <Card loading={loading} size=\"default\">\r\n                        <Meta\r\n                            avatar={<Avatar style={{width: 40, height: 40, margin: 15}}\r\n                                            src={require('../../images/icons/income.jpg').default}/>}\r\n                            title={t('text.txt_total_income')}\r\n                            description={\r\n                                <Title style={{color: flatColors.EMERALD}} level={4}>\r\n                                    {`${txt_income}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={24} md={12} sm={12} xs={12} span={6}>\r\n                    <Card loading={loading}>\r\n                        <Meta\r\n                            avatar={<Avatar style={{width: 40, height: 40, margin: 15}}\r\n                                            src={require('../../images/icons/expense.png').default}/>}\r\n                            title={t('text.txt_total_expense')}\r\n                            description={\r\n                                <Title style={{color: flatColors.ALIZARIN}} level={4}>\r\n                                    {`${txt_expense}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={24} md={12} sm={12} xs={12} span={6}>\r\n                    <Card loading={loading}>\r\n                        <Meta\r\n                            avatar={<Avatar style={{width: 40, height: 40, margin: 15}}\r\n                                            src={require('../../images/icons/saving.png').default}/>}\r\n                            title={t('text.txt_total_saving')}\r\n                            description={\r\n                                <Title style={{color: colorOptions.saving}} level={4}>\r\n                                    {`${txt_saving}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={24} md={12} sm={12} xs={12} span={6}>\r\n                    <Card loading={loading}>\r\n                        <Meta\r\n                            avatar={\r\n                                <div style={{margin: 15}}>\r\n                                    <ClockCircleOutlined style={{fontSize: 40}}/>\r\n                                </div>\r\n                            }\r\n                            title={t('text.txt_remaining')}\r\n                            description={\r\n                                <Title style={{color: colorOptions.remaining}} level={4}>\r\n                                    {`${txt_remain}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} VNĐ\r\n                                </Title>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n            </Space>\r\n        </Card>\r\n    )\r\n}\r\nCountTotals.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {authentication} = state;\r\n    return {\r\n        authentication\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(CountTotals));\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Breadcrumb, Avatar, Space, Col, Dropdown, Layout, Image, Menu, Row, Switch, Card, Empty} from \"antd\";\r\nimport {\r\n    UserOutlined,\r\n    DownOutlined,\r\n    SettingOutlined,\r\n    AppstoreOutlined,\r\n    MailOutlined,\r\n    EllipsisOutlined\r\n} from '@ant-design/icons';\r\nimport {setDefaultLanguage, setLanguage, setTranslations, translate, setLanguageCookie} from \"react-switch-lang\";\r\nimport en from \"../../language/en.json\";\r\nimport vi from \"../../language/vi.json\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport NestedTable from \"../multiple/multiple\";\r\nimport IncomePage from \"../incomes/index\";\r\nimport ChartComponent from \"../chart\";\r\nimport {dataConstants} from \"../../constants/data.contants\";\r\nimport {dataActions} from \"../../actions/index\";\r\n\r\nimport {history} from '../../helpers/index';\r\nimport CountTotals from \"../count_totals/count_totals\";\r\nimport FooterComponent from \"./footer\";\r\nimport PieChartComponent from \"../chart/default/pie_chart\";\r\nimport 'handsontable/dist/handsontable.full.min.css';\r\n\r\nsetTranslations({vi, en});\r\nconst {Header, Content, Footer} = Layout;\r\n\r\n// If you want to remember selected language\r\nsetLanguageCookie();\r\n\r\nfunction HomeComponent(props) {\r\n    const {t} = props;\r\n    const [array_data, set_array_data] = useState([]);\r\n    const [data_all_year, set_data_all_year] = useState([]);\r\n\r\n    useEffect(() => {\r\n        prepare_callback();\r\n    }, []);\r\n\r\n    //------- Lấy list year\r\n    async function fn_load_all_year() {\r\n        return await props.dispatch(dataActions.getYearNumber());\r\n    }\r\n\r\n    //------- Lấy data theo year\r\n    async function fn_get_data_by_year(year) {\r\n        return await props.dispatch(dataActions.fn_get_data_by_year(year));\r\n    }\r\n\r\n    function prepare_callback() {\r\n        fn_load_all_year().then(response => {\r\n            if (response.type === dataConstants.DATA_YEAR_SUCCESS) {\r\n                let objectX = [];\r\n                if (response.data) {\r\n                    (async function fnc() {\r\n                        const promises = response.data.map((num) => fn_get_data_by_year(num.year));\r\n                        const data_return = await Promise.all(promises);\r\n                        if (data_return) {\r\n                            data_return.map(value => {\r\n                                if (value.type === dataConstants.DATA_BY_YEAR_SUCCESS) {\r\n                                    objectX.push(value.data);\r\n                                }\r\n                            })\r\n                        }\r\n                        if (objectX.length > 0) {\r\n                            objectX = objectX.sort((a, b) => {\r\n                                return a.year - b.year;\r\n                            })\r\n                        }\r\n                        set_array_data(objectX);\r\n                    })();\r\n                }\r\n            }\r\n        });\r\n\r\n        fn_get_data_all_year().then(response => {\r\n            if (response.type === dataConstants.DATA_ALL_YEAR_SUCCESS) {\r\n                set_data_all_year(response);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    async function fn_get_data_all_year() {\r\n        return await props.dispatch(dataActions.fn_get_data_all_year());\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                <Breadcrumb.Item>App</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-background\">\r\n                <Row gutter={12}>\r\n                    <Col lg={7} md={24} xs={24}>\r\n                        <Card>\r\n                            {array_data.length === 0 ? (\r\n                                <Empty/>\r\n                            ) : (\r\n                                <PieChartComponent {...props} array_data={array_data}/>\r\n                            )}\r\n\r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg={17} md={24} xs={24}>\r\n                        <Card>\r\n                            <IncomePage {...props} prepare_callback={prepare_callback}/>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row gutter={12}>\r\n                    <Col lg={16} md={24} xs={24}>\r\n                        <ChartComponent {...props} array_data={array_data}/>\r\n                    </Col>\r\n                    <Col lg={8} md={24} xs={24}>\r\n                        <CountTotals data_all_year={data_all_year} {...props} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <br/>\r\n                <Row gutter={12}>\r\n                    <Col lg={24} md={24} xs={24}>\r\n                        <NestedTable data_all_year={data_all_year}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nHomeComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {alert, users, authentication} = state;\r\n    const {user} = authentication;\r\n    return {\r\n        alert,\r\n        users,\r\n        user\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(HomeComponent));\r\n","import {\r\n    AppstoreFilled,\r\n    AppstoreOutlined\r\n} from '@ant-design/icons';\r\nimport {Button, Layout, Menu, theme, Row, Col, List, Switch, Dropdown, Avatar} from 'antd';\r\nimport React, {useEffect, useState} from 'react';\r\nimport './layout.css';\r\nimport {history} from \"../../helpers\";\r\nimport {setDefaultLanguage, setLanguage, setLanguageCookie, setTranslations, translate} from \"react-switch-lang\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport vi from \"../../language/vi.json\";\r\nimport en from \"../../language/en.json\";\r\nimport HomeComponent from \"../home/home\";\r\nimport FooterComponent from \"../home/footer\";\r\n\r\nconst {Header, Sider, Content} = Layout;\r\n\r\nsetTranslations({vi, en});\r\n\r\n// If you want to remember selected language\r\nsetLanguageCookie();\r\n\r\nconst LayoutComponent = (props) => {\r\n    const {t} = props;\r\n    const [current, setCurrent] = useState('dashboard');\r\n    const [open, setOpen] = useState(false);\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const [theme, setTheme] = useState('light');\r\n    const [valueLanguage, setValueLanguage] = useState('vi');\r\n    const [classNameHot, setClassNameHot] = useState(theme === 'light' ? 'light-theme' : 'dark-theme');\r\n\r\n    function changeTheme(value) {\r\n        setTheme(value ? 'dark' : 'light');\r\n        setClassNameHot(value ? 'dark-theme' : 'light-theme');\r\n    }\r\n\r\n    function handleSetLanguage(key) {\r\n        const lang = key ? 'en' : 'vi';\r\n        setValueLanguage(lang);\r\n        setLanguage(lang);\r\n    }\r\n\r\n    function signOut(e) {\r\n        history.push('/login')\r\n    }\r\n\r\n    function handleMenuClick(e) {\r\n        if (e.key === '3') {\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    function handleOpenChange(flag) {\r\n        setOpen(flag);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (theme === 'light') {\r\n            document.body.classList.remove('dark');\r\n            document.body.classList.add('light');\r\n        } else {\r\n            document.body.classList.remove('light');\r\n            document.body.classList.add('dark');\r\n        }\r\n    }, [theme]);\r\n\r\n    useEffect(() => {\r\n        setDefaultLanguage(valueLanguage);\r\n        const now = new Date();\r\n        if (now.getHours() < 6 || now.getHours() >= 18) {\r\n            setTheme('dark');\r\n            setClassNameHot('dark-theme');\r\n\r\n        } else {\r\n            setTheme('light');\r\n            setClassNameHot('light-theme');\r\n        }\r\n    }, []);\r\n\r\n\r\n    const items = [\r\n        {\r\n            label: (\r\n                <Row style={{padding: 5}}>\r\n                    <Col span={12}>\r\n                        {t('text.txt_language')}\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Switch defaultChecked={valueLanguage === 'en'}\r\n                                onChange={handleSetLanguage}\r\n                                checkedChildren=\"Eng\"\r\n                                unCheckedChildren=\"Viet\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            ),\r\n            key: 'language',\r\n        },\r\n        {\r\n            label: (\r\n                <Row style={{padding: 5}}>\r\n                    <Col span={12}>\r\n                        {t('text.txt_theme')}\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Switch\r\n                            checked={theme === 'dark'}\r\n                            onChange={changeTheme}\r\n                            checkedChildren=\"Dark\"\r\n                            unCheckedChildren=\"Light\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            ),\r\n            key: 'theme',\r\n        },\r\n        {\r\n            label: (\r\n                <Row align={\"left\"} onClick={e => signOut(e)}>\r\n                    {t('home.logout')}\r\n                </Row>\r\n            ),\r\n            key: 'signout',\r\n        },\r\n    ];\r\n\r\n\r\n    const itemsMenuHeader = [\r\n        {\r\n            label: t('home.title'),\r\n            key: 'dashboard',\r\n            icon: <AppstoreFilled/>,\r\n        },\r\n    ];\r\n\r\n    const onClick = (e) => {\r\n        console.log('click ', e);\r\n        setCurrent(e.key);\r\n    };\r\n\r\n\r\n    return (\r\n        <Layout hasSider style={{\r\n            minHeight: '100vh',\r\n        }}>\r\n            <Layout className=\"site-layout\">\r\n                <Header\r\n                    style={{\r\n                        position: 'sticky',\r\n                        top: 0,\r\n                        zIndex: 1,\r\n                        width: '100%',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    <Row>\r\n                        <Col span={3}>\r\n                            <div className=\"demo-logo-vertical\"/>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Menu theme={theme} onClick={onClick} selectedKeys={[current]} mode=\"horizontal\"\r\n                                  items={itemsMenuHeader}/>\r\n                        </Col>\r\n                        <Col span={9}>\r\n                            <Row justify=\"end\">\r\n                                <Dropdown\r\n                                    overlayStyle={{width: 256}}\r\n                                    menu={{\r\n                                        items,\r\n                                        onClick: handleMenuClick\r\n                                    }}\r\n                                    onOpenChange={handleOpenChange}\r\n                                    open={open}\r\n                                >\r\n                                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                        <Avatar size=\"large\"\r\n                                                src={'https://scontent.fsgn13-2.fna.fbcdn.net/v/t39.30808-6/269870110_4627302557381096_845600942053273274_n.jpg?_nc_cat=109&ccb=1-7&_nc_sid=09cbfe&_nc_ohc=9driW8vCHm8AX81eiDD&_nc_ht=scontent.fsgn13-2.fna&oh=00_AfAtfTPxzNvCNyU8yvMiHrIbl3mEHczIBwdoQnm1cDWo7A&oe=646F07EB'}/>\r\n                                    </a>\r\n                                </Dropdown>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content style={{margin: '24px 16px 0', overflow: 'initial'}}>\r\n                    <HomeComponent {...props} classNameHot={classNameHot} theme={theme} valueLanguage={valueLanguage}/>\r\n                </Content>\r\n                <FooterComponent />\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nLayoutComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {alert, users, authentication} = state;\r\n    const {user} = authentication;\r\n    return {\r\n        alert,\r\n        users,\r\n        user\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true}\r\n)(translate(LayoutComponent));","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    AutoComplete,\r\n    Button,\r\n    Cascader,\r\n    Checkbox,\r\n    Col,\r\n    Form,\r\n    Input,\r\n    InputNumber, Layout,\r\n    Row,\r\n    Select,\r\n} from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReCaptcha} from 'react-recaptcha-google';\r\nimport {setDefaultLanguage, translate} from \"react-switch-lang\";\r\nimport {userActions} from \"../../actions\";\r\nimport {userConstants} from \"../../constants\";\r\nimport {history} from \"../../helpers\";\r\nimport RecaptchaComponent from \"../reCAPTCHA/reCAPTCHA\";\r\n\r\nconst {Header, Content, Footer} = Layout;\r\nconst RegisterComponent = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const onFinish = (values) => {\r\n        const {username, password} = values;\r\n        if (username && password) {\r\n            setLoading(true);\r\n            setTimeout(() => {\r\n                props.dispatch(userActions.register(username, password));\r\n            }, 1000);\r\n        }\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const now = new Date();\r\n        if (now.getHours() < 18) {\r\n            document.body.classList.remove('dark');\r\n            document.body.classList.add('light');\r\n        } else {\r\n            document.body.classList.remove('light');\r\n            document.body.classList.add('dark');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Layout style={{transition: \"background-color 0.5s ease\"}}>\r\n            <Content className=\"site-layout\" style={{padding: '0 50px', marginTop: 64}}>\r\n                <Row align=\"middle\" style={{minHeight: 700}}>\r\n                    <Col span={8} offset={8}>\r\n                        <Form\r\n                            name=\"basic\"\r\n                            labelCol={{span: 8}}\r\n                            wrapperCol={{span: 16}}\r\n                            initialValues={{remember: true}}\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                rules={[{required: true, message: 'Please input your username!'}]}\r\n                            >\r\n                                <Input/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                rules={[{required: true, message: 'Please input your password!'}]}\r\n                            >\r\n                                <Input.Password/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{offset: 8, span: 16}}>\r\n                                <Checkbox>Remember me</Checkbox>\r\n                            </Form.Item>\r\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Register\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Content>\r\n        </Layout>\r\n\r\n    )\r\n};\r\n\r\nRegisterComponent.propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {registering} = state.authentication;\r\n    return {\r\n        registering\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    null,\r\n    null,\r\n    {forwardRef: true})(translate(RegisterComponent));","import React, { Component } from 'react';\r\nimport { ReCaptcha } from 'react-recaptcha-google'\r\nclass RecaptchaComponent extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\r\n        this.verifyCallback = this.verifyCallback.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.captchaDemo) {\r\n            console.log(\"started, just a second...\")\r\n            this.captchaDemo.reset();\r\n        }\r\n    }\r\n\r\n    onLoadRecaptcha() {\r\n        if (this.captchaDemo) {\r\n            this.captchaDemo.reset();\r\n        }\r\n    }\r\n\r\n    verifyCallback(recaptchaToken) {\r\n        // Here you will get the final recaptchaToken!!!\r\n        console.log(recaptchaToken, \"<= your recaptcha token\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* You can replace captchaDemo with any ref word */}\r\n                <ReCaptcha\r\n                    ref={(el) => {this.captchaDemo = el;}}\r\n                    size=\"normal\"\r\n                    data-theme=\"dark\"\r\n                    render=\"explicit\"\r\n                    sitekey=\"6Lftp1YkAAAAALTksf5zj8t11B0TZVHPRU9xtoud\"\r\n                    onloadCallback={this.onLoadRecaptcha}\r\n                    verifyCallback={this.verifyCallback}\r\n                />\r\n                <code>\r\n                    1. Add <strong>your site key</strong> in the ReCaptcha component. <br/>\r\n                    2. Check <strong>console</strong> to see the token.\r\n                </code>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default RecaptchaComponent;","import React from 'react';\r\nimport {history} from './helpers/index';\r\nimport LoginComponent from \"./components/login/login\";\r\nimport {PrivateRoute} from './components/PrivateRoute';\r\nimport LayoutComponent from \"./components/layout/layout\";\r\nimport RegisterComponent from \"./components/register/register\";\r\nimport {Router, Route, Switch as SwitchDOM} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router history={history}>\r\n            <SwitchDOM>\r\n                <Route path=\"/login\" name=\"Login Page\" component={LoginComponent}/>\r\n                <Route path=\"/register\" name=\"Register Page\" component={RegisterComponent}/>\r\n                <PrivateRoute exact path=\"/\" name=\"Layout Component\" component={LayoutComponent}/>\r\n            </SwitchDOM>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {store} from './helpers';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}